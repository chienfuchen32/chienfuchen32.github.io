<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Jeff's note</title><link>https://chienfuchen32.github.io/</link><description>Recent content in Jeff's note</description><language>en-us</language><lastBuildDate>Wed, 31 May 2023 20:10:53 +0800</lastBuildDate><atom:link href="https://chienfuchen32.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Least Recently Used Cache</title><link>https://chienfuchen32.github.io/posts/least-recently-used--cache/</link><guid>https://chienfuchen32.github.io/posts/least-recently-used--cache/</guid><pubDate>Wed, 31 May 2023 20:10:53 +0800</pubDate><description><![CDATA[<h2 id="purpose">Purpose</h2>
<p>TODO</p>
<h2 id="example-from-leetcode-146-lru-cache">Example from LeetCode 146. LRU Cache</h2>
<p><a href="https://leetcode.com/problems/lru-cache/">problem link</a></p>
<h3 id="implementation">Implementation</h3>
<p>TODO commemt</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python3" data-lang="python3"><span style="display:flex;"><span><span style="color:#00f">class</span> <span style="color:#2b91af">Node</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#00f">def</span> __init__(self, key, value, prev=<span style="color:#00f">None</span>, nxt=<span style="color:#00f">None</span>):
</span></span><span style="display:flex;"><span>        self.key = key
</span></span><span style="display:flex;"><span>        self.value = value
</span></span><span style="display:flex;"><span>        self.prev = prev
</span></span><span style="display:flex;"><span>        self.next = nxt
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#00f">class</span> <span style="color:#2b91af">DoubleLinkList</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#00f">def</span> __init__(self):
</span></span><span style="display:flex;"><span>        self.head = <span style="color:#00f">None</span>
</span></span><span style="display:flex;"><span>        self.tail = <span style="color:#00f">None</span>
</span></span><span style="display:flex;"><span>        self.length = 0
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#00f">def</span> add_node_to_tail(self, node: Node) -&gt; <span style="color:#00f">None</span>:
</span></span><span style="display:flex;"><span>        self.length += 1
</span></span><span style="display:flex;"><span>        <span style="color:#00f">if</span> self.head <span style="color:#00f">is</span> <span style="color:#00f">None</span>:
</span></span><span style="display:flex;"><span>            self.head = node
</span></span><span style="display:flex;"><span>            <span style="color:#00f">return</span> 
</span></span><span style="display:flex;"><span>        <span style="color:#00f">if</span> self.tail <span style="color:#00f">is</span> <span style="color:#00f">None</span>:
</span></span><span style="display:flex;"><span>            self.tail = node
</span></span><span style="display:flex;"><span>            self.tail.prev = self.head
</span></span><span style="display:flex;"><span>            self.head.next = self.tail
</span></span><span style="display:flex;"><span>            <span style="color:#00f">return</span>
</span></span><span style="display:flex;"><span>        self.tail.next = node
</span></span><span style="display:flex;"><span>        node.prev = self.tail
</span></span><span style="display:flex;"><span>        self.tail = node
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#00f">def</span> remove_node_from_head(self) -&gt; int:
</span></span><span style="display:flex;"><span>        self.length -= 1
</span></span><span style="display:flex;"><span>        old_key = self.head.key
</span></span><span style="display:flex;"><span>        self.head = self.head.next
</span></span><span style="display:flex;"><span>        <span style="color:#00f">if</span> self.head <span style="color:#00f">is</span> <span style="color:#00f">not</span> <span style="color:#00f">None</span>:
</span></span><span style="display:flex;"><span>            self.head.prev = <span style="color:#00f">None</span>
</span></span><span style="display:flex;"><span>        <span style="color:#00f">return</span> old_key
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#00f">def</span> remove_node_from_node(self, node) -&gt; <span style="color:#00f">None</span>:
</span></span><span style="display:flex;"><span>        self.length -= 1
</span></span><span style="display:flex;"><span>        <span style="color:#00f">if</span> node.prev <span style="color:#00f">is</span> <span style="color:#00f">not</span> <span style="color:#00f">None</span>:
</span></span><span style="display:flex;"><span>            node.prev.next = node.next
</span></span><span style="display:flex;"><span>        <span style="color:#00f">if</span> node.next <span style="color:#00f">is</span> <span style="color:#00f">not</span> <span style="color:#00f">None</span>:
</span></span><span style="display:flex;"><span>            node.next.prev = node.prev
</span></span><span style="display:flex;"><span>        <span style="color:#00f">if</span> node == self.tail:
</span></span><span style="display:flex;"><span>            <span style="color:#00f">if</span> self.tail.prev <span style="color:#00f">is</span> <span style="color:#00f">not</span> <span style="color:#00f">None</span>:
</span></span><span style="display:flex;"><span>                self.tail.prev.next = <span style="color:#00f">None</span>
</span></span><span style="display:flex;"><span>            self.tail = self.tail.prev
</span></span><span style="display:flex;"><span>        <span style="color:#00f">if</span> node == self.head:
</span></span><span style="display:flex;"><span>            <span style="color:#00f">if</span> self.head.next <span style="color:#00f">is</span> <span style="color:#00f">not</span> <span style="color:#00f">None</span>:
</span></span><span style="display:flex;"><span>                self.head.next.prev = <span style="color:#00f">None</span>
</span></span><span style="display:flex;"><span>            self.head = self.head.next
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#00f">def</span> print_all_node(self) -&gt; <span style="color:#00f">None</span>:
</span></span><span style="display:flex;"><span>        ptr = self.head
</span></span><span style="display:flex;"><span>        <span style="color:#00f">while</span> ptr <span style="color:#00f">is</span> <span style="color:#00f">not</span> <span style="color:#00f">None</span>:
</span></span><span style="display:flex;"><span>            ptr = ptr.next
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#00f">class</span> <span style="color:#2b91af">LRUCache</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#00f">def</span> __init__(self, capacity: int):
</span></span><span style="display:flex;"><span>        self.cache = {} <span style="color:#008000"># {key: Node}</span>
</span></span><span style="display:flex;"><span>        self.link_list = DoubleLinkList()
</span></span><span style="display:flex;"><span>        self.capacity = capacity
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#00f">def</span> get(self, key: int) -&gt; int:
</span></span><span style="display:flex;"><span>        <span style="color:#00f">if</span> self.cache.get(key, <span style="color:#00f">None</span>) <span style="color:#00f">is</span> <span style="color:#00f">not</span> <span style="color:#00f">None</span>:
</span></span><span style="display:flex;"><span>            node = self.cache[key]
</span></span><span style="display:flex;"><span>            value = node.value
</span></span><span style="display:flex;"><span>            new_node = Node(key, value)
</span></span><span style="display:flex;"><span>            self.link_list.remove_node_from_node(node)
</span></span><span style="display:flex;"><span>            self.cache[key] = new_node
</span></span><span style="display:flex;"><span>            self.link_list.add_node_to_tail(new_node)
</span></span><span style="display:flex;"><span>            <span style="color:#00f">return</span> value
</span></span><span style="display:flex;"><span>        <span style="color:#00f">return</span> -1
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#00f">def</span> put(self, key: int, value: int) -&gt; <span style="color:#00f">None</span>:
</span></span><span style="display:flex;"><span>        <span style="color:#00f">if</span> self.cache.get(key, <span style="color:#00f">None</span>) <span style="color:#00f">is</span> <span style="color:#00f">not</span> <span style="color:#00f">None</span>:
</span></span><span style="display:flex;"><span>            node = self.cache[key]
</span></span><span style="display:flex;"><span>            <span style="color:#00f">del</span> self.cache[key]
</span></span><span style="display:flex;"><span>            self.link_list.remove_node_from_node(node)
</span></span><span style="display:flex;"><span>        <span style="color:#00f">else</span>:
</span></span><span style="display:flex;"><span>            <span style="color:#00f">if</span> self.link_list.length &gt;= self.capacity:
</span></span><span style="display:flex;"><span>                head_key = self.link_list.remove_node_from_head()
</span></span><span style="display:flex;"><span>                <span style="color:#00f">del</span> self.cache[head_key]
</span></span><span style="display:flex;"><span>        new_node = Node(key, value)
</span></span><span style="display:flex;"><span>        self.cache[key] = new_node
</span></span><span style="display:flex;"><span>        self.link_list.add_node_to_tail(new_node)
</span></span></code></pre></div>]]></description></item><item><title>How to Repair File System Provided From Kubernetes Ceph Persistent Volume</title><link>https://chienfuchen32.github.io/posts/how-to-repair-file-system-provided-from-kubernetes-ceph-persistent-volume/</link><guid>https://chienfuchen32.github.io/posts/how-to-repair-file-system-provided-from-kubernetes-ceph-persistent-volume/</guid><pubDate>Sat, 06 May 2023 09:29:38 +0800</pubDate><description><![CDATA[<h1 id="how-to-repair-file-system-provided-from-kubernetes-ceph-persistent-volume">How to repair file system provided from Kubernetes ceph persistent volume</h1>
<p>某日由於底層VM出現硬體故障，整座自建的Kubernetes接受影響，
部署於該環境的應用MySQL無法掛載pv，從pod出現的錯誤訊息如下:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>MountVolume.SetUp failed <span style="color:#00f">for</span> volume <span style="color:#a31515">&#34;pvc-78cf22fa-d776-43a4-98d7-d594f02ea018&#34;</span> : mount command failed, status: Failure, reason: failed to mount volume /dev/rbd13 [xfs] to /var/lib/kubelet/plugins/ceph.rook.io/rook-ceph/mounts/pvc-78cf22fa-d776-43a4-98d7-d594f02ea018, error mount failed: exit status 32 Mounting command: systemd-run Mounting arguments: --description=Kubernetes transient mount <span style="color:#00f">for</span> /var/lib/kubelet/plugins/ceph.rook.io/rook-ceph/mounts/pvc-78cf22fa-d776-43a4-98d7-d594f02ea018 --scope -- mount -t xfs -o rw,defaults /dev/rbd13 /var/lib/kubelet/plugins/ceph.rook.io/rook-ceph/mounts/pvc-78cf22fa-d776-43a4-98d7-d594f02ea018 Output: Running scope as unit run-r2594d6c82152421c8891bfa8761e8c05.scope. mount: mount /dev/rbd13 on /var/lib/kubelet/plugins/ceph.rook.io/rook-ceph/mounts/pvc-78cf22fa-d776-43a4-98d7-d594f02ea018 failed: Structure needs cleaning
</span></span></code></pre></div><p>處理方式:
透過ceph tool重新掛載該pv的image，試著使用fsck修復</p>
<h2 id="詳細處理流程">詳細處理流程:</h2>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ kubectl exec -it -n rook-ceph rook-ceph-tools-69f996589-ps4k7 bash
</span></span><span style="display:flex;"><span>[root@twtpedev013 /]<span style="color:#008000"># rbd map --pool=replicapool pvc-78cf22fa-d776-43a4-98d7-d594f02ea018</span>
</span></span><span style="display:flex;"><span>[root@twtpedev013 /]<span style="color:#008000"># lsblk</span>
</span></span><span style="display:flex;"><span>NAME                                                                MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
</span></span><span style="display:flex;"><span>sda                                                                   8:0    0   16G  0 disk
</span></span><span style="display:flex;"><span>|-sda1                                                                8:1    0  731M  0 part
</span></span><span style="display:flex;"><span>|-sda2                                                                8:2    0    1K  0 part
</span></span><span style="display:flex;"><span><span style="color:#a31515">`</span>-sda5                                                                8:5    0 15.3G  0 part
</span></span><span style="display:flex;"><span>  |-ubuntu--vg-root                                                 252:0    0 14.3G  0 lvm  /etc/hosts
</span></span><span style="display:flex;"><span>  <span style="color:#a31515">`</span>-ubuntu--vg-swap_1                                               252:1    0  976M  0 lvm
</span></span><span style="display:flex;"><span>sdb                                                                   8:16   0 1000G  0 disk
</span></span><span style="display:flex;"><span><span style="color:#a31515">`</span>-ceph--4b83cf83--445d--42cc--8eeb--f7febf99fcab-osd--data--ee3fbf0e--4521--46fd--9879--e73048f7a697
</span></span><span style="display:flex;"><span>                                                                    252:2    0  999G  0 lvm
</span></span><span style="display:flex;"><span>sr0                                                                  11:0    1 1024M  0 rom
</span></span><span style="display:flex;"><span>rbd0                                                                251:0    0   10G  0 disk
</span></span><span style="display:flex;"><span>[root@twtpedev013 /]<span style="color:#008000"># mkdir test-mysql</span>
</span></span><span style="display:flex;"><span>[root@twtpedev013 /]<span style="color:#008000"># mount /dev/rbd0 test-mysql/</span>
</span></span><span style="display:flex;"><span>mount: mount /dev/rbd0 on /test-mysql failed: Structure needs cleaning
</span></span><span style="display:flex;"><span>[root@twtpedev013 /]<span style="color:#008000"># fsck /dev/rbd0</span>
</span></span><span style="display:flex;"><span>fsck from util-linux 2.23.2
</span></span><span style="display:flex;"><span>If you wish to check the consistency of an XFS filesystem or
</span></span><span style="display:flex;"><span>repair a damaged filesystem, see xfs_repair(8).
</span></span><span style="display:flex;"><span>[root@twtpedev013 /]<span style="color:#008000"># xfs_repair -L /dev/rbd0</span>
</span></span><span style="display:flex;"><span>Phase 1 - find and verify superblock...
</span></span><span style="display:flex;"><span>- reporting progress in intervals of 15 minutes
</span></span><span style="display:flex;"><span>Phase 2 - using internal log
</span></span><span style="display:flex;"><span>- zero log...
</span></span><span style="display:flex;"><span>ALERT: The filesystem has valuable metadata changes in a log which is being
</span></span><span style="display:flex;"><span>destroyed because the -L option was used.
</span></span><span style="display:flex;"><span>- scan filesystem freespace and inode maps...
</span></span><span style="display:flex;"><span>agi unlinked bucket 35 is 8227 in ag 0 (inode=8227)
</span></span><span style="display:flex;"><span>sb_ifree 228, counted 227
</span></span><span style="display:flex;"><span>sb_fdblocks 2398405, counted 2426486
</span></span><span style="display:flex;"><span>- 02:26:05: scanning filesystem freespace - 17 of 17 allocation groups <span style="color:#00f">done</span>
</span></span><span style="display:flex;"><span>- found root inode chunk
</span></span><span style="display:flex;"><span>Phase 3 - <span style="color:#00f">for</span> each AG...
</span></span><span style="display:flex;"><span>- scan and clear agi unlinked lists...
</span></span><span style="display:flex;"><span>- 02:26:05: scanning agi unlinked lists - 17 of 17 allocation groups <span style="color:#00f">done</span>
</span></span><span style="display:flex;"><span>- process known inodes and perform inode discovery...
</span></span><span style="display:flex;"><span>- agno = 0
</span></span><span style="display:flex;"><span>- agno = 15
</span></span><span style="display:flex;"><span>- agno = 16
</span></span><span style="display:flex;"><span>Metadata CRC error detected at xfs_bmbt block 0x2d9ff8/0x1000
</span></span><span style="display:flex;"><span>data fork in ino 8226 claims free block 1112
</span></span><span style="display:flex;"><span>correcting imap
</span></span><span style="display:flex;"><span>Metadata CRC error detected at xfs_bmbt block 0x2d9ff8/0x1000
</span></span><span style="display:flex;"><span>btree block 2/48127 is suspect, error -74
</span></span><span style="display:flex;"><span>bad magic <span style="color:#008000"># 0 in inode 8227 (data fork) bmbt block 572415</span>
</span></span><span style="display:flex;"><span>bad data fork in inode 8227
</span></span><span style="display:flex;"><span>cleared inode 8227
</span></span><span style="display:flex;"><span>- agno = 1
</span></span><span style="display:flex;"><span>- agno = 2
</span></span><span style="display:flex;"><span>- agno = 3
</span></span><span style="display:flex;"><span>- agno = 4
</span></span><span style="display:flex;"><span>- agno = 5
</span></span><span style="display:flex;"><span>- agno = 6
</span></span><span style="display:flex;"><span>- agno = 7
</span></span><span style="display:flex;"><span>- agno = 8
</span></span><span style="display:flex;"><span>- agno = 9
</span></span><span style="display:flex;"><span>- agno = 10
</span></span><span style="display:flex;"><span>- agno = 11
</span></span><span style="display:flex;"><span>- agno = 12
</span></span><span style="display:flex;"><span>- agno = 13
</span></span><span style="display:flex;"><span>- agno = 14
</span></span><span style="display:flex;"><span>- 02:26:05: process known inodes and inode discovery - 384 of 384 inodes <span style="color:#00f">done</span>
</span></span><span style="display:flex;"><span>- process newly discovered inodes...
</span></span><span style="display:flex;"><span>- 02:26:05: process newly discovered inodes - 17 of 17 allocation groups <span style="color:#00f">done</span>
</span></span><span style="display:flex;"><span>Phase 4 - check <span style="color:#00f">for</span> duplicate blocks...
</span></span><span style="display:flex;"><span>- setting up duplicate extent list...
</span></span><span style="display:flex;"><span>- 02:26:05: setting up duplicate extent list - 17 of 17 allocation groups <span style="color:#00f">done</span>
</span></span><span style="display:flex;"><span>- check <span style="color:#00f">for</span> inodes claiming duplicate blocks...
</span></span><span style="display:flex;"><span>- agno = 0
</span></span><span style="display:flex;"><span>- agno = 6
</span></span><span style="display:flex;"><span>- agno = 7
</span></span><span style="display:flex;"><span>- agno = 8
</span></span><span style="display:flex;"><span>- agno = 9
</span></span><span style="display:flex;"><span>- agno = 10
</span></span><span style="display:flex;"><span>- agno = 11
</span></span><span style="display:flex;"><span>- agno = 12
</span></span><span style="display:flex;"><span>- agno = 13
</span></span><span style="display:flex;"><span>- agno = 14
</span></span><span style="display:flex;"><span>- agno = 15
</span></span><span style="display:flex;"><span>- agno = 16
</span></span><span style="display:flex;"><span>- agno = 1
</span></span><span style="display:flex;"><span>- agno = 3
</span></span><span style="display:flex;"><span>- agno = 4
</span></span><span style="display:flex;"><span>- agno = 5
</span></span><span style="display:flex;"><span>- agno = 2
</span></span><span style="display:flex;"><span>- 02:26:05: check <span style="color:#00f">for</span> inodes claiming duplicate blocks - 384 of 384 inodes <span style="color:#00f">done</span>
</span></span><span style="display:flex;"><span>Phase 5 - rebuild AG headers and trees...
</span></span><span style="display:flex;"><span>- 02:26:05: rebuild AG headers and trees - 17 of 17 allocation groups <span style="color:#00f">done</span>
</span></span><span style="display:flex;"><span>- reset superblock...
</span></span><span style="display:flex;"><span>Phase 6 - check inode connectivity...
</span></span><span style="display:flex;"><span>- resetting contents of realtime bitmap and summary inodes
</span></span><span style="display:flex;"><span>- traversing filesystem ...
</span></span><span style="display:flex;"><span>- traversal finished ...
</span></span><span style="display:flex;"><span>- moving disconnected inodes to lost+found ...
</span></span><span style="display:flex;"><span>Phase 7 - verify and correct link counts...
</span></span><span style="display:flex;"><span>- 02:26:05: verify and correct link counts - 17 of 17 allocation groups <span style="color:#00f">done</span>
</span></span><span style="display:flex;"><span>Metadata corruption detected at xfs_bmbt block 0x2d9ff8/0x1000
</span></span><span style="display:flex;"><span>libxfs_writebufr: write verifer failed on xfs_bmbt bno 0x2d9ff8/0x1000
</span></span><span style="display:flex;"><span>Maximum metadata LSN (82836:5824) is ahead of log (1:64).
</span></span><span style="display:flex;"><span>Format log to cycle 82839.
</span></span><span style="display:flex;"><span>releasing dirty buffer (bulk) to free list!done
</span></span><span style="display:flex;"><span>[root@twtpedev013 /]<span style="color:#008000"># mount /dev/rbd0 test-mysql/</span>
</span></span><span style="display:flex;"><span>[root@twtpedev013 /]<span style="color:#008000"># ls test-mysql/</span>
</span></span><span style="display:flex;"><span><span style="color:#008000">#ib_16384_0.dblwr binlog.000009 client-cert.pem ib_logfile1 performance_schema sys</span>
</span></span><span style="display:flex;"><span><span style="color:#008000">#ib_16384_1.dblwr binlog.index client-key.pem ibdata1 private_key.pem undo_001</span>
</span></span><span style="display:flex;"><span><span style="color:#008000">#innodb_temp binlog.~rec~ eams ibtmp1 public_key.pem undo_002</span>
</span></span><span style="display:flex;"><span>auto.cnf ca-key.pem ib_buffer_pool mysql server-cert.pem
</span></span><span style="display:flex;"><span>binlog.000008 ca.pem ib_logfile0 mysql.ibd server-key.pem
</span></span><span style="display:flex;"><span>[root@twtpedev013 /]<span style="color:#008000"># umount /dev/rbd0</span>
</span></span><span style="display:flex;"><span>[root@twtpedev013 /]<span style="color:#008000"># rbd unmap /dev/rbd0</span>
</span></span></code></pre></div><p>之後再重新將該MySQL deployment重啟發現正常了</p>
<pre tabindex="0"><code>2023-05-04 10:28:38+08:00 [Note] [Entrypoint]: Entrypoint script for MySQL Server 8.0.21-1debian10 started.
2023-05-04 10:28:41+08:00 [Note] [Entrypoint]: Switching to dedicated user &#39;mysql&#39;
2023-05-04 10:28:41+08:00 [Note] [Entrypoint]: Entrypoint script for MySQL Server 8.0.21-1debian10 started.
2023-05-04T02:28:42.380318Z 0 [System] [MY-010116] [Server] /usr/sbin/mysqld (mysqld 8.0.21) starting as process 1
2023-05-04T02:28:42.428012Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.
2023-05-04T02:28:47.779944Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.
2023-05-04T02:28:48.922746Z 0 [System] [MY-011323] [Server] X Plugin ready for connections. Bind-address: &#39;::&#39; port: 33060, socket: /var/run/mysqld/mysqlx.sock
2023-05-04T02:28:49.052930Z 0 [System] [MY-010229] [Server] Starting XA crash recovery...
2023-05-04T02:28:49.070234Z 0 [System] [MY-010232] [Server] XA crash recovery finished.
2023-05-04T02:28:49.287142Z 0 [Warning] [MY-010068] [Server] CA certificate ca.pem is self signed.
2023-05-04T02:28:49.287524Z 0 [System] [MY-013602] [Server] Channel mysql_main configured to support TLS. Encrypted connections are now supported for this channel.
2023-05-04T02:28:49.330334Z 0 [Warning] [MY-011810] [Server] Insecure configuration for --pid-file: Location &#39;/var/run/mysqld&#39; in the path is accessible to all OS users. Consider choosing a different directory.
2023-05-04T02:28:50.168132Z 0 [System] [MY-010931] [Server] /usr/sbin/mysqld: ready for connections. Version: &#39;8.0.21&#39;  socket: &#39;/var/run/mysqld/mysqld.sock&#39;  port: 3306  MySQL Community Server - GPL.
</code></pre><h2 id="ref">ref</h2>
<p><a href="https://docs.ceph.com/en/quincy/start/quick-rbd/">https://docs.ceph.com/en/quincy/start/quick-rbd/</a>
<a href="https://blog.51cto.com/u_13210651/2352686">https://blog.51cto.com/u_13210651/2352686</a>
<a href="https://www.tecmint.com/find-linux-filesystem-type/">https://www.tecmint.com/find-linux-filesystem-type/</a></p>
]]></description></item><item><title>About</title><link>https://chienfuchen32.github.io/about/</link><guid>https://chienfuchen32.github.io/about/</guid><pubDate>Wed, 09 Nov 2022 11:11:00 +0000</pubDate></item><item><title>Continuous Integration Continuous Deployment</title><link>https://chienfuchen32.github.io/posts/continuous-integration-continuous-deployment/</link><guid>https://chienfuchen32.github.io/posts/continuous-integration-continuous-deployment/</guid><pubDate>Thu, 15 Sep 2022 19:02:56 +0800</pubDate><description><![CDATA[<h3 id="devops-concept--practice">DevOps concept &amp; practice</h3>
<pre tabindex="0"><code>|---------|        |---------|  merge  |-------|          |--------------------------|
|local dev|-------&gt;| version |--------&gt;| build |---------&gt;|* security check          |
|---------| commit | control | trigger | agent | pipeline |* build / push artifact   |
    ^              |---------| webhook |-------| task     |* unit / integration test |
    |                                                     |--------------------------|
    |                                                                          |
|---------------------| analysis |------------| operation |----------------|   |release
| * next release plan |&lt;---------| monitor    |----------&gt;| staging        |&lt;--|
| * issues action     |          | metrics log|           | production env |
|---------------------|          |------------|           |----------------|
</code></pre>]]></description></item><item><title>Nginx Ingress Controller K8S Guide</title><link>https://chienfuchen32.github.io/posts/nginx-ingress-controller-k8s-guide/</link><guid>https://chienfuchen32.github.io/posts/nginx-ingress-controller-k8s-guide/</guid><pubDate>Fri, 15 Apr 2022 15:45:07 +0800</pubDate><description><![CDATA[<h2 id="nginx-介紹">Nginx 介紹</h2>
<p>Nginx是非同步框架的網頁伺服器，也可以用作反向代理、負載平衡器和HTTP快取。
<img src="https://miro.medium.com/max/1024/1*TrNJZqECEj0eVuJDeNKtNQ.png" alt="nginx"></p>
<ul>
<li>設置範例</li>
</ul>
<pre tabindex="0"><code class="language-conf" data-lang="conf">server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;

    listen 443 ssl default_server;
    ssl_certificate /tls/server.crt;
    ssl_certificate_key /tls/server.key;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        #root   /usr/share/nginx/html;
        #index  index.html index.htm;
		proxy_pass http://192.168.24.100:9090/;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection &#34;Upgrade&#34;;
		proxy_set_header Host $host;
		proxy_connect_timeout 60s;
		proxy_read_timeout 300s;
		proxy_send_timeout 300s;
    }


    location /socket.io {
        proxy_pass http://192.168.24.100:9091/;
        #Version 1.1 is recommended for use with keepalive connections
        proxy_http_version 1.1; #WebSocket
        proxy_set_header Upgrade $http_upgrade; #WebSocket
        proxy_set_header Connection $connection_upgrade; #WebSocket       
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Cookie $http_cookie;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

}
</code></pre><p>可以透過<code>nginx -s reload</code>讓nginx對新的配置生效</p>
<ul>
<li><a href="https://nginx.org/en/docs/beginners_guide.html">https://nginx.org/en/docs/beginners_guide.html</a></li>
<li><a href="https://nginx.org/en/docs/">https://nginx.org/en/docs/</a></li>
</ul>
<h2 id="k8s-service">K8S service</h2>
<p><img src="https://miro.medium.com/max/1094/1*YeBt0Z9BEA7T_tUO4iYQyQ.png" alt="service">
K8S 定義 Service 這個 resource object，在 pod 的前方提供了一個抽象層，讓外部的服務可以用
domain name 的方式存取 pod，而 domain name &lt;–&gt; Pod 這一段問題，就由 Service 來處理。 但利用
domain name 來存取終究還是需要一個 IP address，而每個 Service 都會自帶 VIP，讓 network traffic
有辦法正常送過來，並導到後方真正提供服務的 pod。</p>
<ul>
<li><a href="https://kubernetes.io/docs/concepts/services-networking/service/">https://kubernetes.io/docs/concepts/services-networking/service/</a></li>
<li><a href="https://godleon.github.io/blog/Kubernetes/k8s-Service-Overview/">https://godleon.github.io/blog/Kubernetes/k8s-Service-Overview/</a></li>
</ul>
<h2 id="k8s-ingress">K8S Ingress</h2>
<p><img src="https://miro.medium.com/max/1024/1*BYGsxY_GR-eZgNJfbbikzA.png" alt="ingress">
Ingress是從Kubernetes叢集外部訪問到群集內部服務的方法之一</p>
<ul>
<li><a href="https://kubernetes.io/docs/concepts/services-networking/ingress/">https://kubernetes.io/docs/concepts/services-networking/ingress/</a></li>
</ul>
<h2 id="nginx-ingress-controller">Nginx Ingress controller</h2>
<p>為了讓Ingress資源工作，叢集必須有一個正在運行的Ingress controller，其功能實作如:</p>
<ul>
<li>SSL/TLS offloading</li>
<li>反向代理，域名解析</li>
<li>四層和七層區別網路封包轉導</li>
</ul>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-txt" data-lang="txt"><span style="display:flex;"><span>Kubernetes                                                  Workstation
</span></span><span style="display:flex;"><span>+---------------------------------------------------+     +------------------+
</span></span><span style="display:flex;"><span>|                                                   |     |                  |
</span></span><span style="display:flex;"><span>|  +-----------+   apiserver        +------------+  |     |  +------------+  |
</span></span><span style="display:flex;"><span>|  |           |   proxy            |            |  |     |  |            |  |
</span></span><span style="display:flex;"><span>|  | apiserver |                    |  ingress   |  |     |  |  ingress   |  |
</span></span><span style="display:flex;"><span>|  |           |                    | controller |  |     |  | controller |  |
</span></span><span style="display:flex;"><span>|  |           |                    |            |  |     |  |            |  |
</span></span><span style="display:flex;"><span>|  |           |                    |            |  |     |  |            |  |
</span></span><span style="display:flex;"><span>|  |           |  service account/  |            |  |     |  |            |  |
</span></span><span style="display:flex;"><span>|  |           |  kubeconfig        |            |  |     |  |            |  |
</span></span><span style="display:flex;"><span>|  |           +&lt;-------------------+            |  |     |  |            |  |
</span></span><span style="display:flex;"><span>|  |           |                    |            |  |     |  |            |  |
</span></span><span style="display:flex;"><span>|  +------+----+      kubeconfig    +------+-----+  |     |  +------+-----+  |
</span></span><span style="display:flex;"><span>|         |&lt;--------------------------------------------------------|        |
</span></span><span style="display:flex;"><span>|                                                   |     |                  |
</span></span><span style="display:flex;"><span>+---------------------------------------------------+     +------------------+
</span></span></code></pre></div><ul>
<li><a href="https://kubernetes.io/docs/concepts/services-networking/ingress-controllers/">https://kubernetes.io/docs/concepts/services-networking/ingress-controllers/</a></li>
<li></li>
</ul>
<p><a href="https://www.f5points.com.tw/2021/10/27/ingress-controller-%E9%81%B8%E5%9E%8B%E6%8C%87%E5%8D%97%EF%BC%8C%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86%EF%BC%9A%E7%A2%BA%E5%AE%9A%E9%9C%80%E6%B1%82/#:~:text=Ingress%20Controller%20%E6%98%AF%E4%B8%80%E7%A8%AE%E5%B0%88%E7%94%A8,%E9%80%B2%E5%85%A5%20Kubernetes%20%E9%9B%86%E7%BE%A4%E7%9A%84%E6%B5%81%E9%87%8F">https://www.f5points.com.tw/2021/10/27/ingress-controller-%E9%81%B8%E5%9E%8B%E6%8C%87%E5%8D%97%EF%BC%8C%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86%EF%BC%9A%E7%A2%BA%E5%AE%9A%E9%9C%80%E6%B1%82/#:~:text=Ingress%20Controller%20%E6%98%AF%E4%B8%80%E7%A8%AE%E5%B0%88%E7%94%A8,%E9%80%B2%E5%85%A5%20Kubernetes%20%E9%9B%86%E7%BE%A4%E7%9A%84%E6%B5%81%E9%87%8F</a></p>
<ul>
<li><a href="https://kubernetes.github.io/ingress-nginx/how-it-works/">https://kubernetes.github.io/ingress-nginx/how-it-works/</a></li>
</ul>
<h2 id="常見使用情形範例與除錯方式">常見使用情形範例與除錯方式</h2>
<h3 id="dnsip避免影響正式環境">DNS,IP,避免影響正式環境</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-txt" data-lang="txt"><span style="display:flex;"><span># /etc/hosts
</span></span><span style="display:flex;"><span># 20220415 lab
</span></span><span style="display:flex;"><span>192.168.24.1 lab-20220415.foo.com
</span></span><span style="display:flex;"><span>192.168.24.1 lab-20220415.bar.foo.com
</span></span></code></pre></div><h3 id="backend-service-k8s-pod-or-external-service">Backend service (K8S pod or external service)</h3>
<ul>
<li>於pod/container中使用<code>curl</code> / <code>wget</code> 工具:</li>
</ul>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ curl localhost:5000/healthz
</span></span></code></pre></div><ul>
<li>透過本機連線來除錯 service port forward (cli or lens)</li>
</ul>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ kubectl port-forward -n 20220415-nginx-lab service/nginx-lab 25000/5000
</span></span></code></pre></div><ul>
<li><a href="https://kubernetes.io/docs/tasks/access-application-cluster/port-forward-access-application-cluster/">https://kubernetes.io/docs/tasks/access-application-cluster/port-forward-access-application-cluster/</a></li>
</ul>
<h3 id="rewrite">rewrite</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>echo <span style="color:#a31515">&#39;
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">apiVersion: networking.k8s.io/v1
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">kind: Ingress
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">metadata:
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">  annotations:
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">    nginx.ingress.kubernetes.io/rewrite-target: /$2
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">  name: rewrite
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">  namespace: default
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">spec:
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">  ingressClassName: nginx
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">  rules:
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">  - host: rewrite.bar.com
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">    http:
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">      paths:
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">      - path: /something(/|$)(.*)
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">        pathType: Prefix
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">        backend:
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">          service:
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">            name: http-svc
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">            port: 
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">              number: 80
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">&#39;</span> | kubectl create -f -
</span></span></code></pre></div><p>In this ingress definition, any characters captured by (.*) will be assigned to the
placeholder $2, which is then used as a parameter in the rewrite-target annotation.
For example, the ingress definition above will result in the following rewrites:</p>
<ol>
<li><code>rewrite.bar.com/something</code> rewrites to <code>rewrite.bar.com</code></li>
<li><code>rewrite.bar.com/something/</code> rewrites to <code>rewrite.bar.com/</code></li>
<li><code>rewrite.bar.com/something/new</code> rewrites to <code>rewrite.bar.com/new</code></li>
</ol>
<pre tabindex="0"><code>example

rewrite.bar.com/something/new    |------------|      IP:PORT/new          |-----------------|
--------------------------------&gt;|   Nginx    |--------------------------&gt;| backend service |
                                 |------------|                           |-----------------|
</code></pre><p><a href="https://kubernetes.github.io/ingress-nginx/examples/rewrite/">https://kubernetes.github.io/ingress-nginx/examples/rewrite/</a></p>
<h3 id="ssltls-offloading">SSL/TLS Offloading</h3>
<ul>
<li><a href="https://www.nginx.com/blog/nginx-ssl/">https://www.nginx.com/blog/nginx-ssl/</a></li>
</ul>
<h3 id="websocket">Websocket</h3>
<ul>
<li><a href="https://nginx.org/en/docs/http/websocket.html">https://nginx.org/en/docs/http/websocket.html</a></li>
<li></li>
</ul>
<p><a href="https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/#custom-timeouts">https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/#custom-timeouts</a></p>
<h3 id="tcpudp-service">TCP/UDP service</h3>
<ul>
<li><a href="https://nginx.org/en/docs/stream/stream_processing.html">https://nginx.org/en/docs/stream/stream_processing.html</a></li>
<li><a href="https://kubernetes.github.io/ingress-nginx/user-guide/exposing-tcp-udp-services/">https://kubernetes.github.io/ingress-nginx/user-guide/exposing-tcp-udp-services/</a></li>
</ul>
<h1 id="lab-and-demo">lab and demo</h1>
<ul>
<li><a href="https://github.com/chienfuchen32/k8s-nginx-ingress-hands-on-lab">https://github.com/chienfuchen32/k8s-nginx-ingress-hands-on-lab</a></li>
</ul>
<ol>
<li>develope app</li>
<li>deploy</li>
</ol>
<ul>
<li>examples
<a href="https://lab-20220415.foo.com/">https://lab-20220415.foo.com/</a>
<a href="https://lab-20220415.bar.foo.com">https://lab-20220415.bar.foo.com</a>
<a href="https://lab-20220415.foo.com/nginx-lab/">https://lab-20220415.foo.com/nginx-lab/</a>
<a href="https://lab-20220415.foo.com/nginx-lab-rewrite/">https://lab-20220415.foo.com/nginx-lab-rewrite/</a></li>
</ul>
<h1 id="特殊情境">特殊情境</h1>
<h2 id="若服務不在k8s中在同一個lan的vm可以從k8s叢集連線的到">若服務不在K8S中，在同一個LAN的VM，可以從K8S叢集連線的到</h2>
<ul>
<li>假設服務跑在http://192.168.24.101:5000</li>
</ul>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span>apiVersion: v1
</span></span><span style="display:flex;"><span>kind: Service
</span></span><span style="display:flex;"><span>metadata:
</span></span><span style="display:flex;"><span>  name: external-svc
</span></span><span style="display:flex;"><span>  namespace: app
</span></span><span style="display:flex;"><span>spec:
</span></span><span style="display:flex;"><span>  ports:
</span></span><span style="display:flex;"><span>    - protocol: TCP
</span></span><span style="display:flex;"><span>      port: 5000
</span></span><span style="display:flex;"><span>      targetPort: 5000
</span></span><span style="display:flex;"><span>  type: ClusterIP
</span></span><span style="display:flex;"><span>  sessionAffinity: None
</span></span><span style="display:flex;"><span>---
</span></span><span style="display:flex;"><span>apiVersion: v1
</span></span><span style="display:flex;"><span>kind: Endpoints
</span></span><span style="display:flex;"><span>metadata:
</span></span><span style="display:flex;"><span>  name: external-svc
</span></span><span style="display:flex;"><span>  namespace: app
</span></span><span style="display:flex;"><span>subsets:
</span></span><span style="display:flex;"><span>  - addresses:
</span></span><span style="display:flex;"><span>      - ip: 192.168.24.101
</span></span><span style="display:flex;"><span>    ports:
</span></span><span style="display:flex;"><span>      - port: 5000
</span></span><span style="display:flex;"><span>        protocol: TCP
</span></span><span style="display:flex;"><span>---
</span></span><span style="display:flex;"><span>apiVersion: extensions/v1beta1
</span></span><span style="display:flex;"><span>kind: Ingress
</span></span><span style="display:flex;"><span>metadata:
</span></span><span style="display:flex;"><span>  name: external-ingress
</span></span><span style="display:flex;"><span>  namespace: app
</span></span><span style="display:flex;"><span>  labels:
</span></span><span style="display:flex;"><span>    app: external-ingress
</span></span><span style="display:flex;"><span>  annotations:
</span></span><span style="display:flex;"><span>    kubernetes.io/ingress.class: nginx
</span></span><span style="display:flex;"><span>    nginx.ingress.kubernetes.io/rewrite-target: /$2
</span></span><span style="display:flex;"><span>    nginx.ingress.kubernetes.io/use-regex: <span style="color:#a31515">&#39;true&#39;</span>
</span></span><span style="display:flex;"><span>spec:
</span></span><span style="display:flex;"><span>  rules:
</span></span><span style="display:flex;"><span>    - host: mydomain.com
</span></span><span style="display:flex;"><span>      http:
</span></span><span style="display:flex;"><span>        paths:
</span></span><span style="display:flex;"><span>          - path: /path(/|$)(.*)
</span></span><span style="display:flex;"><span>            pathType: ImplementationSpecific
</span></span><span style="display:flex;"><span>            backend:
</span></span><span style="display:flex;"><span>              serviceName: external-svc
</span></span><span style="display:flex;"><span>              servicePort: 5000
</span></span></code></pre></div>]]></description></item><item><title>Kubernetes Guide for Developer</title><link>https://chienfuchen32.github.io/posts/k8s-guide-for-developer/</link><guid>https://chienfuchen32.github.io/posts/k8s-guide-for-developer/</guid><pubDate>Fri, 18 Mar 2022 14:32:45 +0800</pubDate><description><![CDATA[<h2 id="environment">Environment</h2>
<p>Before you try to use any client tool connect to Kubernetes, please check the endpoint field
&ldquo;server&rdquo; of &ldquo;cluster&rdquo; credential config file.</p>
<p>Please make sure you&rsquo;re able connect with the kube-apiserver.</p>
<p>For instance, example below shown here is &ldquo;k8s-cluster&rdquo;</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span>apiVersion: v1
</span></span><span style="display:flex;"><span>kind: Config
</span></span><span style="display:flex;"><span>clusters:
</span></span><span style="display:flex;"><span>  - name: team-a-admin@kubernetes
</span></span><span style="display:flex;"><span>    cluster:
</span></span><span style="display:flex;"><span>      server: <span style="color:#a31515">&#39;https://k8s-cluster:8443&#39;</span>
</span></span><span style="display:flex;"><span>      certificate-authority-data: &gt;-<span style="color:#a31515">
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">        xxxxx</span>        
</span></span><span style="display:flex;"><span>users:
</span></span><span style="display:flex;"><span>  - name: team-a-admin
</span></span><span style="display:flex;"><span>    user:
</span></span><span style="display:flex;"><span>      token: &gt;-<span style="color:#a31515">
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">        xxxxx</span>        
</span></span><span style="display:flex;"><span>contexts:
</span></span><span style="display:flex;"><span>  - name: team-a-admin@kubernetes
</span></span><span style="display:flex;"><span>    context:
</span></span><span style="display:flex;"><span>      user: team-a-admin
</span></span><span style="display:flex;"><span>      cluster: team-a-admin@kubernetes
</span></span><span style="display:flex;"><span>      namespace: team-a
</span></span><span style="display:flex;"><span>current-context: team-a-admin@kubernetes
</span></span></code></pre></div><p>This example is based on self-host Kubernetes v1.18 environment, you machine might not be able to recognize the
target,</p>
<p>it lack of DNS and k8s apiserver certificate support currently.</p>
<p>If you have trouble with this kind of problem, please add a record in my <b>hosts</b> file,
that makes my machine&rsquo;s dns resolvable.</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-txt" data-lang="txt"><span style="display:flex;"><span># File path
</span></span><span style="display:flex;"><span># Windows: `C:\Windows\System32\drivers\etc\hosts`
</span></span><span style="display:flex;"><span># Linux: `/etc/hosts`
</span></span><span style="display:flex;"><span>192.168.24.1 k8s-cluster`
</span></span></code></pre></div><h4 id="k8s-client">K8S client</h4>
<ul>
<li><a href="https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/">https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/</a></li>
<li><a href="https://k8slens.dev/">https://k8slens.dev/</a></li>
<li><a href="https://k9scli.io">https://k9scli.io</a></li>
<li><a href="https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/">https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/</a></li>
</ul>
<h2 id="docker-registry">Docker Registry</h2>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ docker login my-registry.com
</span></span><span style="display:flex;"><span>Username: 
</span></span><span style="display:flex;"><span>Password:
</span></span><span style="display:flex;"><span>$ docker push my-registry.com/my-app:0.0.1
</span></span></code></pre></div><h2 id="deployment-example-in-our-environment">Deployment example in our environment</h2>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span>apiVersion: apps/v1
</span></span><span style="display:flex;"><span>kind: Deployment
</span></span><span style="display:flex;"><span>metadata:
</span></span><span style="display:flex;"><span>  name: my-app
</span></span><span style="display:flex;"><span>  namespace: team-a
</span></span><span style="display:flex;"><span>spec:
</span></span><span style="display:flex;"><span>  selector:
</span></span><span style="display:flex;"><span>    matchLabels:
</span></span><span style="display:flex;"><span>      app: my-app
</span></span><span style="display:flex;"><span>  replicas: 1 <span style="color:#008000"># tells deployment to run 2 pods matching the template</span>
</span></span><span style="display:flex;"><span>  template:
</span></span><span style="display:flex;"><span>    metadata:
</span></span><span style="display:flex;"><span>      labels:
</span></span><span style="display:flex;"><span>        app: my-app
</span></span><span style="display:flex;"><span>    spec:
</span></span><span style="display:flex;"><span>      containers:
</span></span><span style="display:flex;"><span>      - name: my-app
</span></span><span style="display:flex;"><span>        image: my-registry/my-app:0.0.1
</span></span><span style="display:flex;"><span>        ports:
</span></span><span style="display:flex;"><span>        - containerPort: 80
</span></span><span style="display:flex;"><span>      nodeSelector:
</span></span><span style="display:flex;"><span>        node-role.kubernetes.io/worker: <span style="color:#a31515">&#39;true&#39;</span> <span style="color:#008000"># We have many VMs in the Kubernetes cluster. </span>
</span></span><span style="display:flex;"><span>We prefer all the pod running on certain VM, please add description below in my deployment. 
</span></span><span style="display:flex;"><span>That will make pods running on our pre labeled K8S worker node.
</span></span><span style="display:flex;"><span>      imagePullSecrets:
</span></span><span style="display:flex;"><span>        - name: my-registry-auth
</span></span></code></pre></div><ul>
<li><a href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/">https://kubernetes.io/docs/concepts/workloads/controllers/deployment/</a></li>
</ul>
<h2 id="service-ingress">Service, Ingress</h2>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span>apiVersion: v1
</span></span><span style="display:flex;"><span>kind: Service
</span></span><span style="display:flex;"><span>metadata:
</span></span><span style="display:flex;"><span>  name: my-app-svc
</span></span><span style="display:flex;"><span>  namespace: team-a
</span></span><span style="display:flex;"><span>spec:
</span></span><span style="display:flex;"><span>  ports:
</span></span><span style="display:flex;"><span>    - name: http
</span></span><span style="display:flex;"><span>      protocol: TCP
</span></span><span style="display:flex;"><span>      port: 80
</span></span><span style="display:flex;"><span>      targetPort: 80
</span></span><span style="display:flex;"><span>  selector:
</span></span><span style="display:flex;"><span>    app: my-app
</span></span><span style="display:flex;"><span>  type: ClusterIP
</span></span><span style="display:flex;"><span>---
</span></span><span style="display:flex;"><span>apiVersion: extensions/v1beta1
</span></span><span style="display:flex;"><span>kind: Ingress
</span></span><span style="display:flex;"><span>metadata:
</span></span><span style="display:flex;"><span>  name: my-app-ingress
</span></span><span style="display:flex;"><span>  namespace: team-a
</span></span><span style="display:flex;"><span>  labels:
</span></span><span style="display:flex;"><span>    app: my-app
</span></span><span style="display:flex;"><span>    kubernetes.io/ingress.class: nginx
</span></span><span style="display:flex;"><span>    nginx.ingress.kubernetes.io/use-regex: <span style="color:#a31515">&#39;true&#39;</span>
</span></span><span style="display:flex;"><span>spec:
</span></span><span style="display:flex;"><span>  rules:
</span></span><span style="display:flex;"><span>    - host: my-app.deltaww.com
</span></span><span style="display:flex;"><span>      http:
</span></span><span style="display:flex;"><span>        paths:
</span></span><span style="display:flex;"><span>          - path: /prefix(/|$)(.*)
</span></span><span style="display:flex;"><span>            backend:
</span></span><span style="display:flex;"><span>              serviceName: my-app-svc
</span></span><span style="display:flex;"><span>              servicePort: 80
</span></span><span style="display:flex;"><span>---
</span></span><span style="display:flex;"><span>apiVersion: extensions/v1beta1
</span></span><span style="display:flex;"><span>kind: Ingress
</span></span><span style="display:flex;"><span>metadata:
</span></span><span style="display:flex;"><span>  name: my-domain-ingress
</span></span><span style="display:flex;"><span>  namespace: team-a
</span></span><span style="display:flex;"><span>  labels:
</span></span><span style="display:flex;"><span>    app: my-domain
</span></span><span style="display:flex;"><span>    kubernetes.io/ingress.class: nginx
</span></span><span style="display:flex;"><span>    nginx.ingress.kubernetes.io/use-regex: <span style="color:#a31515">&#39;true&#39;</span>
</span></span><span style="display:flex;"><span>spec:
</span></span><span style="display:flex;"><span>  tls:
</span></span><span style="display:flex;"><span>    - hosts:
</span></span><span style="display:flex;"><span>        - my-domain.com
</span></span><span style="display:flex;"><span>      secretName: my-tls <span style="color:#008000"># please make sure there&#39;s an existed K8S secret in </span>
</span></span><span style="display:flex;"><span>the same namespace
</span></span><span style="display:flex;"><span>  rules:
</span></span><span style="display:flex;"><span>    - host: my-domain.com
</span></span><span style="display:flex;"><span>      http:
</span></span><span style="display:flex;"><span>        paths:
</span></span><span style="display:flex;"><span>          - path: /prefix(/|$)(.*)
</span></span><span style="display:flex;"><span>            backend:
</span></span><span style="display:flex;"><span>              serviceName: my-app-svc
</span></span><span style="display:flex;"><span>              servicePort: 80
</span></span></code></pre></div><ul>
<li><a href="https://kubernetes.io/docs/concepts/services-networking/service/">https://kubernetes.io/docs/concepts/services-networking/service/</a></li>
<li><a href="https://kubernetes.io/docs/concepts/services-networking/ingress/">https://kubernetes.io/docs/concepts/services-networking/ingress/</a></li>
</ul>
<h2 id="pvc">PVC</h2>
<p>Here&rsquo;s a PVC resource example.</p>
<p>The storageClassName describe below, rook-ceph is installed in our self-host environment. If you application is running on other Kubernetes cluster, please contact administrator.</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span>apiVersion: v1
</span></span><span style="display:flex;"><span>kind: PersistentVolumeClaim
</span></span><span style="display:flex;"><span>metadata:
</span></span><span style="display:flex;"><span>  name: my-app-logs-pvc
</span></span><span style="display:flex;"><span>  namespace: team-a
</span></span><span style="display:flex;"><span>  labels:
</span></span><span style="display:flex;"><span>    app: my-app-logs-pvc
</span></span><span style="display:flex;"><span>spec:
</span></span><span style="display:flex;"><span>  accessModes:
</span></span><span style="display:flex;"><span>    - ReadWriteOnce
</span></span><span style="display:flex;"><span>  resources:
</span></span><span style="display:flex;"><span>    requests:
</span></span><span style="display:flex;"><span>      storage: 10Gi
</span></span><span style="display:flex;"><span>  storageClassName: rook-ceph-block
</span></span><span style="display:flex;"><span>  volumeMode: Filesystem
</span></span></code></pre></div><p>Here&rsquo;s an example for logging file path mounting PVC</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span>apiVersion: v1
</span></span><span style="display:flex;"><span>kind: Pod
</span></span><span style="display:flex;"><span>metadata:
</span></span><span style="display:flex;"><span>  name: my-app2
</span></span><span style="display:flex;"><span>  namespace: team-a
</span></span><span style="display:flex;"><span>spec:
</span></span><span style="display:flex;"><span>  volumes:
</span></span><span style="display:flex;"><span>    - name: my-app-logs-storage
</span></span><span style="display:flex;"><span>      persistentVolumeClaim:
</span></span><span style="display:flex;"><span>        claimName: my-app-logs-pvc
</span></span><span style="display:flex;"><span>  containers:
</span></span><span style="display:flex;"><span>    - name: my-app2
</span></span><span style="display:flex;"><span>      image: my-registry.com/my-app:0.0.1
</span></span><span style="display:flex;"><span>      volumeMounts:
</span></span><span style="display:flex;"><span>        - mountPath: <span style="color:#a31515">&#34;/app/logs&#34;</span>
</span></span><span style="display:flex;"><span>          name: my-app-logs-storage
</span></span><span style="display:flex;"><span>  nodeSelector:
</span></span><span style="display:flex;"><span>    node-role.kubernetes.io/worker: <span style="color:#a31515">&#39;true&#39;</span> <span style="color:#008000"># We have many VMs in the Kubernetes cluster. We </span>
</span></span><span style="display:flex;"><span>prefer all the pod running on certain VM, please add description below in my deployment. 
</span></span><span style="display:flex;"><span>That will make pods running on our pre labeled K8S worker node.
</span></span><span style="display:flex;"><span>  imagePullSecrets:
</span></span><span style="display:flex;"><span>    - name: my-registry-auth
</span></span></code></pre></div><ul>
<li><a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-persistent-volume-storage/">https://kubernetes.io/docs/tasks/configure-pod-container/configure-persistent-volume-storage/</a></li>
</ul>
]]></description></item><item><title>Disk encryption: LUKS ( Linux Unified Key Setup) with Tang</title><link>https://chienfuchen32.github.io/posts/luks-tang/</link><guid>https://chienfuchen32.github.io/posts/luks-tang/</guid><pubDate>Thu, 17 Mar 2022 10:16:41 +0800</pubDate><description><![CDATA[<h2 id="key-component">Key component</h2>
<ul>
<li><code>tang server</code> is responsible for helping dracut to decrypt the target disk. It won&rsquo;t store any client key.</li>
<li><code>encrypted server</code> is required to use <code>clevis</code>, <code>dracut</code>. It provide a easier way that integrate with tang server to decrypt LUKS disk.</li>
</ul>
<h2 id="network-topology">Network topology</h2>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-txt" data-lang="txt"><span style="display:flex;"><span>  |-------------------------|                      |------------|
</span></span><span style="display:flex;"><span>  |LUKS encrypted server    |-- disk decryption --&gt;|tang server |
</span></span><span style="display:flex;"><span>  |(clevis, dracut) [env]   |&lt;----- response ------|[tang]      |
</span></span><span style="display:flex;"><span>  |-------------------------|                      |____________|
</span></span></code></pre></div><h2 id="tang-server">Tang server</h2>
<ul>
<li>software installation via apt on x86x64 Ubuntu 20.04</li>
</ul>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>adm@tang:~$ sudo apt-get install tang -y
</span></span><span style="display:flex;"><span><span style="color:#008000">## check version</span>
</span></span><span style="display:flex;"><span>adm@tang:~$ apt list --installed | grep tang
</span></span><span style="display:flex;"><span>tang/focal,now 7-1build1 amd64 [installed]
</span></span><span style="display:flex;"><span><span style="color:#008000">## Enable the tangd service</span>
</span></span><span style="display:flex;"><span>adm@tang:~$ sudo systemctl enable tangd.socket
</span></span></code></pre></div><ul>
<li>Create an override file with 7500 to prevent port conflict</li>
</ul>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>adm@tang:~$ sudo systemctl edit tangd.socket
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span><span style="color:#008000"># tangd.socket</span>
</span></span><span style="display:flex;"><span>[Socket]
</span></span><span style="display:flex;"><span>ListenStream=
</span></span><span style="display:flex;"><span>ListenStream=7500 
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>adm@tang:~$ sudo systemctl daemon-reload
</span></span><span style="display:flex;"><span><span style="color:#008000">## Check that your configuration is working:</span>
</span></span><span style="display:flex;"><span>adm@tang:~$ sudo systemctl show tangd.socket -p Listen
</span></span><span style="display:flex;"><span>Listen=[::]:7500 (Stream)
</span></span><span style="display:flex;"><span><span style="color:#008000">## Start the tangd service</span>
</span></span><span style="display:flex;"><span>adm@tang:~$ sudo systemctl restart tangd.socket
</span></span><span style="display:flex;"><span>adm@tang:~$ sudo systemctl status tangd.socket
</span></span><span style="display:flex;"><span>● tangd.socket - Tang Server socket
</span></span><span style="display:flex;"><span>     Loaded: loaded (/lib/systemd/system/tangd.socket; enabled; vendor preset: enabled)
</span></span><span style="display:flex;"><span>    Drop-In: /etc/systemd/system/tangd.socket.d
</span></span><span style="display:flex;"><span>             └─override.conf
</span></span><span style="display:flex;"><span>     Active: active (listening) since Mon 2022-03-14 00:54:03 UTC; 1h 25min ago
</span></span><span style="display:flex;"><span>   Triggers: ● tangd@0.service
</span></span><span style="display:flex;"><span>     Listen: [::]:7500 (Stream)
</span></span><span style="display:flex;"><span>   Accepted: 0; Connected: 0;
</span></span><span style="display:flex;"><span>      Tasks: 0 (limit: 984)
</span></span><span style="display:flex;"><span>     Memory: 44.0K
</span></span><span style="display:flex;"><span>     CGroup: /system.slice/tangd.socket
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Mar 14 00:54:03 d systemd[1]: Listening on Tang Server socket.
</span></span></code></pre></div><h2 id="encrypted-server-try-clevis-luks-to-bind-with-tang">encrypted server: try clevis, luks to bind with tang</h2>
<p>Assume that tang server is now running on <code>192.168.100.10:7500</code>, we need to run <code>clevis</code> to bind local encrypted disk (<code>/dev/md0</code> in this case) with tang.</p>
<ul>
<li>software installation via apt on x86x64 Ubuntu 20.04</li>
</ul>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>adm@enc:~$ sudo apt-get install clevis clevis-luks clevis-dracut -y
</span></span><span style="display:flex;"><span><span style="color:#008000">## check version</span>
</span></span><span style="display:flex;"><span>adm@enc:~$ apt list --installed | grep clevis
</span></span><span style="display:flex;"><span>clevis-dracut/focal-updates,now 12-1ubuntu2.3 all [installed]
</span></span><span style="display:flex;"><span>clevis-luks/focal-updates,now 12-1ubuntu2.3 all [installed]
</span></span><span style="display:flex;"><span>clevis-systemd/focal-updates,now 12-1ubuntu2.3 amd64 [installed,automatic]
</span></span><span style="display:flex;"><span>clevis/focal-updates,now 12-1ubuntu2.3 amd64 [installed]
</span></span><span style="display:flex;"><span>adm@enc:~$ apt list --installed | grep dracut
</span></span><span style="display:flex;"><span>dracut-core/focal,now 048+80-2 amd64 [installed,automatic]
</span></span><span style="display:flex;"><span>dracut-network/focal,now 048+80-2 all [installed]
</span></span></code></pre></div><ul>
<li>check network configuration and check if tang server available</li>
</ul>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>adm@enc:~$ip a
</span></span><span style="display:flex;"><span>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
</span></span><span style="display:flex;"><span>    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
</span></span><span style="display:flex;"><span>    inet 127.0.0.1/8 scope host lo
</span></span><span style="display:flex;"><span>       valid_lft forever preferred_lft forever
</span></span><span style="display:flex;"><span>    inet6 ::1/128 scope host
</span></span><span style="display:flex;"><span>       valid_lft forever preferred_lft forever
</span></span><span style="display:flex;"><span>2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000
</span></span><span style="display:flex;"><span>    link/ether c4:00:ad:94:d8:76 brd ff:ff:ff:ff:ff:ff
</span></span><span style="display:flex;"><span>    inet 192.168.100.61/24 brd 192.168.100.255 scope global enp1s0
</span></span><span style="display:flex;"><span>       valid_lft forever preferred_lft forever
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>adm@enc:~$ curl -sfg http://192.168.100.10:7500/adv -o adv.jws
</span></span></code></pre></div><ul>
<li>check encrypted disk, partition</li>
</ul>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>adm@enc:~$ sudo lsblk
</span></span><span style="display:flex;"><span>NAME              MAJ:MIN RM   SIZE RO TYPE  MOUNTPOINT
</span></span><span style="display:flex;"><span>loop0               7:0    0    55M  1 loop  /snap/core18/1880
</span></span><span style="display:flex;"><span>loop1               7:1    0  55.5M  1 loop  /snap/core18/2344
</span></span><span style="display:flex;"><span>loop2               7:2    0  67.9M  1 loop  /snap/lxd/22526
</span></span><span style="display:flex;"><span>loop3               7:3    0  67.8M  1 loop  /snap/lxd/22753
</span></span><span style="display:flex;"><span>loop4               7:4    0  61.9M  1 loop  /snap/core20/1376
</span></span><span style="display:flex;"><span>loop5               7:5    0  43.6M  1 loop  /snap/snapd/15177
</span></span><span style="display:flex;"><span>sda                 8:0    0 953.9G  0 disk
</span></span><span style="display:flex;"><span>├─sda1              8:1    0   512M  0 part  /boot/efi
</span></span><span style="display:flex;"><span>├─sda2              8:2    0     1G  0 part  /boot
</span></span><span style="display:flex;"><span>├─sda3              8:3    0 945.9G  0 part
</span></span><span style="display:flex;"><span>│ └─md0             9:0    0 945.8G  0 raid1
</span></span><span style="display:flex;"><span>│   └─dm_crypt-1  253:0    0 945.7G  0 crypt
</span></span><span style="display:flex;"><span>│     └─vg0-lv--0 253:1    0 945.7G  0 lvm   /
</span></span><span style="display:flex;"><span>└─sda4              8:4    0   6.5G  0 part
</span></span><span style="display:flex;"><span>sdb                 8:16   0 953.9G  0 disk
</span></span><span style="display:flex;"><span>├─sdb1              8:17   0     8G  0 part  [SWAP]
</span></span><span style="display:flex;"><span>└─sdb2              8:18   0 945.9G  0 part
</span></span><span style="display:flex;"><span>  └─md0             9:0    0 945.8G  0 raid1
</span></span><span style="display:flex;"><span>    └─dm_crypt-1  253:0    0 945.7G  0 crypt
</span></span><span style="display:flex;"><span>      └─vg0-lv--0 253:1    0 945.7G  0 lvm   /
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008000"># check LUKS on encrpyt partition, total 8 keyslots</span>
</span></span><span style="display:flex;"><span>$ sudo cryptsetup luksDump /dev/md0
</span></span><span style="display:flex;"><span>LUKS header information
</span></span><span style="display:flex;"><span>Version:        2
</span></span><span style="display:flex;"><span>Epoch:          5
</span></span><span style="display:flex;"><span>Metadata area:  16384 [bytes]
</span></span><span style="display:flex;"><span>Keyslots area:  16744448 [bytes]
</span></span><span style="display:flex;"><span>UUID:           b3abd9e0-b3be-4dab-9928-e3f29c749b93
</span></span><span style="display:flex;"><span>Label:          (no label)
</span></span><span style="display:flex;"><span>Subsystem:      (no subsystem)
</span></span><span style="display:flex;"><span>Flags:          (no flags)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Data segments:
</span></span><span style="display:flex;"><span>  0: crypt
</span></span><span style="display:flex;"><span>        offset: 16777216 [bytes]
</span></span><span style="display:flex;"><span>        length: (whole device)
</span></span><span style="display:flex;"><span>        cipher: aes-xts-plain64
</span></span><span style="display:flex;"><span>        sector: 512 [bytes]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Keyslots:
</span></span><span style="display:flex;"><span>  0: luks2
</span></span><span style="display:flex;"><span>        Key:        512 bits
</span></span><span style="display:flex;"><span>        Priority:   normal
</span></span><span style="display:flex;"><span>        Cipher:     aes-xts-plain64
</span></span><span style="display:flex;"><span>        Cipher key: 512 bits
</span></span><span style="display:flex;"><span>        PBKDF:      argon2i
</span></span><span style="display:flex;"><span>        Time cost:  5
</span></span><span style="display:flex;"><span>        Memory:     1048576
</span></span><span style="display:flex;"><span>        Threads:    4
</span></span><span style="display:flex;"><span>        Salt:       44 01 7e f7 be 90 fa d9 fe 24 8f b7 95 6e 28 91
</span></span><span style="display:flex;"><span>                    53 7c 47 5d 6f 0a cf 34 18 c4 ee 13 d6 91 28 e5
</span></span><span style="display:flex;"><span>        AF stripes: 4000
</span></span><span style="display:flex;"><span>        AF hash:    sha256
</span></span><span style="display:flex;"><span>        Area offset:32768 [bytes]
</span></span><span style="display:flex;"><span>        Area length:258048 [bytes]
</span></span><span style="display:flex;"><span>        Digest ID:  
</span></span><span style="display:flex;"><span>Tokens:
</span></span><span style="display:flex;"><span>  0: clevis
</span></span><span style="display:flex;"><span>        Keyslot:  1
</span></span><span style="display:flex;"><span>Digests:
</span></span><span style="display:flex;"><span>  0: pbkdf2
</span></span><span style="display:flex;"><span>        Hash:       sha256
</span></span><span style="display:flex;"><span>        Iterations: 100054
</span></span><span style="display:flex;"><span>        Salt:       8b 7d 45 cf 2b 25 07 bd 7d 48 47 04 1e 70 d0 41
</span></span><span style="display:flex;"><span>                    46 7c fa 1f ec ed 12 2a c5 36 fc 24 56 b8 6c 7e
</span></span><span style="display:flex;"><span>        Digest:     06 89 5e 90 07 1c 83 eb 54 0a 14 d5 ad f2 f6 50
</span></span><span style="display:flex;"><span>                    5f 13 00 58 62 ee 11 62 db 7c e0 1a 45 c5 fa 09
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>adm@enc:~$ sudo clevis luks bind -d /dev/md0 tang <span style="color:#a31515">&#39;{&#34;url&#34;:&#34;http://192.168.100.10:7500&#34;}&#39;</span>
</span></span><span style="display:flex;"><span>The advertisement contains the following signing keys:
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>ADIMDQW1mFAAoGFlQJIG9SioKDW
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Do you wish to trust these keys? [ynYN] y
</span></span><span style="display:flex;"><span>Enter existing LUKS password:
</span></span><span style="display:flex;"><span>...
</span></span><span style="display:flex;"><span><span style="color:#008000"># check current state</span>
</span></span><span style="display:flex;"><span>adm@enc:~$ sudo clevis luks list -d /dev/md0
</span></span><span style="display:flex;"><span>1: tang <span style="color:#a31515">&#39;{&#34;url&#34;:&#34;http://192.168.100.100:7500&#34;}&#39;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008000"># try dracut</span>
</span></span><span style="display:flex;"><span>adm@enc:~$ dracut -fv --regenerate-all --kernel-cmdline <span style="color:#a31515">&#34; ip=192.168.100.61:192.168.100.0/24::255.255.255.0:enc:eth0:off &#34;</span> --kernel-cmdline <span style="color:#a31515">&#34; rd.net.timeout.carrier=3153600 &#34;</span>
</span></span></code></pre></div><h2 id="generate-a-initramfs-for-bootloader">generate a initramfs for bootloader</h2>
<p>Make grub load our image that contains clevis luks disk encryption script. The image is built by <code>dracut</code>. Our purpose is no matter when the <code>grub.cfg</code> will be updated, the main menuentry should be our dracut environment (<code>linux</code>, <code>initrd</code>)</p>
<ul>
<li>check grub version</li>
</ul>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>adm@enc:~$ sudo apt list --installed | grep grub
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>WARNING: apt does not have a stable CLI interface. Use with caution in scripts.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>grub-common/now 2.04-1ubuntu26.2 amd64 [installed,upgradable to: 2.04-1ubuntu26.13]
</span></span><span style="display:flex;"><span>grub-efi-amd64-bin/focal-updates,focal-security,now 2.04-1ubuntu44.2 amd64 [installed,automatic]
</span></span><span style="display:flex;"><span>grub-efi-amd64-signed/focal-updates,focal-security,now 1.167.2+2.04-1ubuntu44.2 amd64 [installed]
</span></span><span style="display:flex;"><span>grub-efi-amd64/focal-updates,focal-security,now 2.04-1ubuntu44.2 amd64 [installed]
</span></span><span style="display:flex;"><span>grub2-common/now 2.04-1ubuntu26.2 amd64 [installed,upgradable to: 2.04-1ubuntu26.13]
</span></span></code></pre></div><ol>
<li>You can try to ping gateway IP and tang server&rsquo;s IP, if gateway IP is not available, don&rsquo;t fill in that field.</li>
</ol>
<pre tabindex="0"><code>adm@enc:~$ ping 192.168.100.10
PING 192.168.100.10 (192.168.100.100) 56(84) bytes of data.
64 bytes from 192.168.100.10: icmp_seq=1 ttl=64 time=10.9 ms
64 bytes from 192.168.100.10: icmp_seq=2 ttl=64 time=1.00 ms
...
</code></pre><p>To enumerate all possible environment to generate new grub.cfg, please check our modified <code>10_linux file</code>
Add new dracut script with customized argument for your environment to grub folder, please check detail in Misc <code>dracut cmdline argument</code> part and edit files <code>/etc/dracut.conf.d/</code> if needed.</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>adm@enc:~$ sudo vi dracut-config/etc-dracut.conf.d/12-kernel-cmdline.conf
</span></span></code></pre></div><pre tabindex="0"><code class="language-conf" data-lang="conf">kernel_cmdline+=&#34; ip=192.168.100.61:192.168.100.0/24::255.255.255.0:enc:eth0:off &#34;
kernel_cmdline+=&#34;rd.net.timeout.carrier=3153600 &#34;
</code></pre><div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#008000"># copy to grub config path</span>
</span></span><span style="display:flex;"><span>adm@enc:~$ sudo cp dracut-config/etc-dracut.conf.d/12-kernel-cmdline.conf /etc/dracut.conf.d/12-kernel-cmdline.conf
</span></span><span style="display:flex;"><span><span style="color:#008000"># backup first</span>
</span></span><span style="display:flex;"><span>adm@enc:~$ sudo cp /etc/grub.d/10_linux /etc/grub.d/.10_linux.bk
</span></span><span style="display:flex;"><span><span style="color:#008000"># add our include running dracut script and set initramfs as default menuentry</span>
</span></span><span style="display:flex;"><span>adm@enc:~$ sudo cp etc-grub.d/10_linux /etc/grub.d/10_linux
</span></span><span style="display:flex;"><span><span style="color:#008000"># update grub.cfg manually</span>
</span></span><span style="display:flex;"><span>adm@enc:~$ sudo update-grub
</span></span><span style="display:flex;"><span><span style="color:#008000"># you might see lot of log including dracut, correct them if there&#39;s anything wrong.</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Sourcing file <span style="color:#a31515">`</span>/etc/default/grub<span style="color:#a31515">&#39;
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">Sourcing file `/etc/default/grub.d/init-select.cfg&#39;</span>
</span></span><span style="display:flex;"><span>Generating grub configuration file ...
</span></span><span style="display:flex;"><span>dracut: Executing: /usr/bin/dracut --kver=5.4.0-104-generic -fv --kernel-cmdline <span style="color:#a31515">&#34; ip=192.168.100.61:192.168.100.0/24::255.255.255.0:enc:eth0:off &#34;</span>
</span></span><span style="display:flex;"><span>dracut: dracut module <span style="color:#a31515">&#39;bootchart&#39;</span> will not be installed, because command <span style="color:#a31515">&#39;/sbin/bootchartd&#39;</span> could not be found!
</span></span><span style="display:flex;"><span>dracut: dracut module <span style="color:#a31515">&#39;clevis-pin-tpm2&#39;</span> will not be installed, because command <span style="color:#a31515">&#39;clevis-decrypt-tpm2&#39;</span> could not be found!
</span></span><span style="display:flex;"><span>dracut: dracut module <span style="color:#a31515">&#39;clevis-pin-tpm2&#39;</span> will not be installed, because command <span style="color:#a31515">&#39;tpm2_createprimary&#39;</span> could not be found!
</span></span><span style="display:flex;"><span>dracut: dracut module <span style="color:#a31515">&#39;clevis-pin-tpm2&#39;</span> will not be installed, because command <span style="color:#a31515">&#39;tpm2_unseal&#39;</span> could not be found!
</span></span><span style="display:flex;"><span>dracut: dracut module <span style="color:#a31515">&#39;clevis-pin-tpm2&#39;</span> will not be installed, because command <span style="color:#a31515">&#39;tpm2_load&#39;</span> could not be found!
</span></span><span style="display:flex;"><span>dracut: dracut module <span style="color:#a31515">&#39;cifs&#39;</span> will not be installed, because command <span style="color:#a31515">&#39;mount.cifs&#39;</span> could not be found!
</span></span><span style="display:flex;"><span>dracut: dracut module <span style="color:#a31515">&#39;biosdevname&#39;</span> will not be installed, because command <span style="color:#a31515">&#39;biosdevname&#39;</span> could not be found!
</span></span><span style="display:flex;"><span>dracut: dracut module <span style="color:#a31515">&#39;clevis-pin-tpm2&#39;</span> will not be installed, because command <span style="color:#a31515">&#39;clevis-decrypt-tpm2&#39;</span> could not be found!
</span></span><span style="display:flex;"><span>dracut: dracut module <span style="color:#a31515">&#39;clevis-pin-tpm2&#39;</span> will not be installed, because command <span style="color:#a31515">&#39;tpm2_createprimary&#39;</span> could not be found!
</span></span><span style="display:flex;"><span>dracut: dracut module <span style="color:#a31515">&#39;clevis-pin-tpm2&#39;</span> will not be installed, because command <span style="color:#a31515">&#39;tpm2_unseal&#39;</span> could not be found!
</span></span><span style="display:flex;"><span>dracut: dracut module <span style="color:#a31515">&#39;clevis-pin-tpm2&#39;</span> will not be installed, because command <span style="color:#a31515">&#39;tpm2_load&#39;</span> could not be found!
</span></span><span style="display:flex;"><span>dracut: dracut module <span style="color:#a31515">&#39;cifs&#39;</span> will not be installed, because command <span style="color:#a31515">&#39;mount.cifs&#39;</span> could not be found!
</span></span><span style="display:flex;"><span>dracut: *** Including module: bash ***
</span></span><span style="display:flex;"><span>dracut: *** Including module: dash ***
</span></span><span style="display:flex;"><span>...
</span></span><span style="display:flex;"><span>dracut: *** Creating initramfs image file <span style="">&#39;</span>/boot/initramfs-5.4.0-42-generic.img<span style="color:#a31515">&#34; done ***
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">Found linux image: /boot/vmlinuz-5.4.0-104-generic
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">Found initrd image: /boot/initramfs-5.4.0-104-generic.img
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">Found initrd image: /boot/initramfs-5.4.0-104-generic.img
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">Found initrd image: /boot/initrd.img-5.4.0-104-generic
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">Found initrd image: /boot/initrd.img-5.4.0-104-generic
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">Found linux image: /boot/vmlinuz-5.4.0-42-generic
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">Found initrd image: /boot/initramfs-5.4.0-42-generic.img
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">Found initrd image: /boot/initramfs-5.4.0-42-generic.img
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">Found initrd image: /boot/initrd.img-5.4.0-42-generic
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">Found initrd image: /boot/initrd.img-5.4.0-42-generic
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">Adding boot menu entry for UEFI Firmware Settings
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">done
</span></span></span></code></pre></div><ul>
<li>check if initramfs created by dracut</li>
</ul>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>adm@enc:~$ ls -lh /boot
</span></span><span style="display:flex;"><span>total 250M
</span></span><span style="display:flex;"><span>-rw-r--r-- 1 root root 233K Feb  3 18:16 config-5.4.0-100-generic
</span></span><span style="display:flex;"><span>-rw-r--r-- 1 root root 233K Mar  2 17:10 config-5.4.0-104-generic
</span></span><span style="display:flex;"><span>drwxr-xr-x 3 root root 4.0K Jan  1  1970 efi
</span></span><span style="display:flex;"><span>drwxr-xr-x 4 root root 4.0K Mar 12 06:33 grub
</span></span><span style="display:flex;"><span>-rw------- 1 root root  24M Mar 11 06:29 initramfs-5.4.0-100-generic.img
</span></span><span style="display:flex;"><span>-rw------- 1 root root  24M Mar 11 06:29 initramfs-5.4.0-42-generic.img
</span></span><span style="display:flex;"><span>lrwxrwxrwx 1 root root   28 Mar 11 07:55 initrd.img -&gt; initrd.img-5.4.0-104-generic
</span></span><span style="display:flex;"><span>-rw-r--r-- 1 root root  84M Feb 26 06:34 initrd.img-5.4.0-100-generic
</span></span><span style="display:flex;"><span>-rw-r--r-- 1 root root  84M Mar 11 07:56 initrd.img-5.4.0-104-generic
</span></span><span style="display:flex;"><span>lrwxrwxrwx 1 root root   28 Mar 11 07:55 initrd.img.old -&gt; initrd.img-5.4.0-100-generic
</span></span><span style="display:flex;"><span>drwx------ 2 root root  16K Feb 25 06:13 lost+found
</span></span><span style="display:flex;"><span>-rw------- 1 root root 4.6M Feb  3 18:16 System.map-5.4.0-100-generic
</span></span><span style="display:flex;"><span>-rw------- 1 root root 4.6M Mar  2 17:10 System.map-5.4.0-104-generic
</span></span><span style="display:flex;"><span>lrwxrwxrwx 1 root root   25 Mar 11 07:55 vmlinuz -&gt; vmlinuz-5.4.0-104-generic
</span></span><span style="display:flex;"><span>-rw------- 1 root root  14M Feb  4 17:04 vmlinuz-5.4.0-100-generic
</span></span><span style="display:flex;"><span>-rw------- 1 root root  14M Mar  2 18:37 vmlinuz-5.4.0-104-generic
</span></span><span style="display:flex;"><span>lrwxrwxrwx 1 root root   25 Mar 11 07:55 vmlinuz.old -&gt; vmlinuz-5.4.0-100-generic
</span></span></code></pre></div><ul>
<li>check if grub config (<code>/boot/grub/grub.cfg</code>) changed and the first one should be direct to our image</li>
</ul>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span>menuentry &#39;Ubuntu&#39; --class ubuntu --class gnu-linux --class gnu --class os $menuentry_id_option &#39;gnulinux-simple-eec358a5-d009-4f70-9210-424330e9adb4&#39; {
</span></span><span style="display:flex;"><span>        recordfail
</span></span><span style="display:flex;"><span>        load_video
</span></span><span style="display:flex;"><span>        gfxmode $linux_gfx_mode
</span></span><span style="display:flex;"><span>        insmod gzio
</span></span><span style="display:flex;"><span>        if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
</span></span><span style="display:flex;"><span>        insmod part_gpt
</span></span><span style="display:flex;"><span>        insmod ext2
</span></span><span style="display:flex;"><span>        set root=&#39;hd0,gpt2&#39;
</span></span><span style="display:flex;"><span>        if [ x$feature_platform_search_hint = xy ]; then
</span></span><span style="display:flex;"><span>          search --no-floppy --fs-uuid --set=root --hint-bios=hd0,gpt2 --hint-efi=hd0,gpt2 --hint-baremetal=ahci0,gpt2  a5963b85-5235-4b31-9776-5f6251c206f3
</span></span><span style="display:flex;"><span>        else
</span></span><span style="display:flex;"><span>          search --no-floppy --fs-uuid --set=root a5963b85-5235-4b31-9776-5f6251c206f3
</span></span><span style="display:flex;"><span>        fi
</span></span><span style="display:flex;"><span>        linux   /vmlinuz-5.4.0-104-generic root=/dev/mapper/ubuntu--vg-ubuntu--lv ro
</span></span><span style="display:flex;"><span>        initrd  /initramfs-5.4.0-104-generic.img
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>...
</span></span></code></pre></div><ul>
<li>you may try clevis-luks boot with disk decryption flow!</li>
</ul>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>adm@enc:~$ sudo reboot
</span></span></code></pre></div><h3 id="enhancement-in-the-future">Enhancement in the future</h3>
<ul>
<li>Shamir&rsquo;s Secret Sharing (SSS) algorithm with clevis multiple constriant: tpm, tangd, &hellip; etc.</li>
<li>add tpm to protect tangd key on site controller</li>
<li>make dracut image name to be fixed</li>
</ul>
<h3 id="misc">Misc</h3>
<ul>
<li>
<p><code>Tangd</code> tech, McCallum-Relyea Exchange: client(clevis) need server(tang) to decrypt data, there&rsquo;s no client data stored in server.</p>
</li>
<li>
<p>dracut cmdline argument</p>
</li>
</ul>
<pre tabindex="0"><code>   ip=&lt;client-IP&gt;:[&lt;peer&gt;]:&lt;gateway-IP&gt;:&lt;netmask&gt;:&lt;client_hostname&gt;:&lt;interface&gt;:{none|off|dhcp|on|any|dhcp6|auto6|ibft}[:[&lt;mtu&gt;][:&lt;macaddr&gt;]]
       explicit network configuration. If you want do define a IPv6
       address, put it in brackets (e.g. [2001:DB8::1]). This
       parameter can be specified multiple times.  &lt;peer&gt; is
       optional and is the address of the remote endpoint for
       pointopoint interfaces and it may be followed by a slash and
       a decimal number, encoding the network prefix length.

       &lt;macaddr&gt;
           optionally set &lt;macaddr&gt; on the &lt;interface&gt;. This cannot
           be used in conjunction with the ifname argument for the
           same &lt;interface&gt;.
Ref: https://man7.org/linux/man-pages/man7/dracut.cmdline.7.html
</code></pre><h3 id="bootloader-alternative">bootloader alternative</h3>
<ul>
<li>
<p>you can still use grub shell, if the <code>/boot/grub/grub.cfg</code> is broken.</p>
</li>
<li>
<p>bootable Ubuntu USB stick</p>
</li>
</ul>
<h4 id="ref">Ref</h4>
<ul>
<li>luks, clevis, tang</li>
</ul>
<pre tabindex="0"><code>https://mdtsai.medium.com/%E8%A7%A3%E9%99%A4-linux-%E5%8A%A0%E5%AF%86%E7%A3%81%E5%8D%80-5b8e597e4c37
https://www.osslab.com.tw/research-luks/
https://www.itread01.com/content/1542818777.html
https://kknews.cc/zh-tw/code/n22kq38.html
https://www.tecmint.com/file-and-disk-encryption-tools-for-linux/
https://www.tecmint.com/disk-encryption-in-linux/
https://help.ubuntu.com/community/Full_Disk_Encryption_Howto_2019
https://wiki.archlinux.org/title/Data-at-rest_encryption
https://docs.microsoft.com/zh-tw/azure/virtual-machines/linux/how-to-configure-lvm-raid-on-crypt
https://linuxsecurity.com/features/top-8-file-and-disk-encryption-tools-for-linux
https://nakedsecurity.sophos.com/2022/01/14/serious-security-linux-full-disk-encryption-bug-fixed-patch-now/
https://www.cyberciti.biz/security/howto-linux-hard-disk-encryption-with-luks-cryptsetup-command/
https://docs.nvidia.com/drive/drive_os_5.1.6.1L/nvvib_docs/index.html#page/DRIVE_OS_Linux_SDK_Development_Guide/Windows%20Systems/security_disk_encryption_lnx.html
https://www.wibu.com/
https://wiki.centos.org/zh-tw/HowTos/EncryptedFilesystem
https://gitlab.com/cryptsetup/cryptsetup/-/wikis/DMCrypt
https://www.digitalocean.com/community/tutorials/how-to-use-dm-crypt-to-create-an-encrypted-volume-on-an-ubuntu-vps
https://www.howtoforge.com/ubuntu_dm_crypt_luks
https://ubuntuqa.com/zh-tw/article/8257.html
https://www.gushiciku.cn/pl/g4f9/zh-tw
https://askubuntu.com/questions/996155/how-do-i-automatically-decrypt-an-encrypted-filesystem-on-the-next-reboot
https://dywang.csie.cyut.edu.tw/dywang/linuxsecurity/node59.html
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/security_hardening/configuring-automated-unlocking-of-encrypted-volumes-using-policy-based-decryption_security-hardening
https://www.youtube.com/watch?v=Dk6ZuydQt9I
https://www.youtube.com/watch?v=h5H6_oxpFA0
https://www.admin-magazine.com/Archive/2018/43/Automatic-data-encryption-and-decryption-with-Clevis-and-Tang
https://www.snia.org/sites/default/files/SDC15_presentations/security/NathanielMcCallum_Network_Bound_Encryption.pdf
https://www.youtube.com/watch?v=p_M0YEE-esA
https://www.cs.purdue.edu/homes/hmaji/teaching/Fall%202018/lectures/19.pdf
https://docs.okd.io/latest/security/network_bound_disk_encryption/nbde-managing-encryption-keys.html
# systemd, init
https://hugh712.gitbooks.io/buildroot/content/system-initialization.html
http://felix-lin.com/linux/init%e6%bc%94%e5%8c%96%e6%ad%b7%e7%a8%8b-%e8%bd%89%e8%b2%bc-%e6%b7%ba%e6%9e%90-linux-%e5%88%9d%e5%a7%8b%e5%8c%96-init-%e7%b3%bb%e7%b5%b1%ef%bc%8c%e7%ac%ac-1-%e9%83%a8%e5%88%86-sysvinit/
https://linux.die.net/man/5/init
http://felix-lin.com/linux/init%E6%BC%94%E5%8C%96%E6%AD%B7%E7%A8%8B-%E8%BD%89%E8%B2%BC-%E6%B7%BA%E6%9E%90-linux-%E5%88%9D%E5%A7%8B%E5%8C%96-init-%E7%B3%BB%E7%B5%B1%EF%BC%8C%E7%AC%AC-2-%E9%83%A8%E5%88%86-upstart/
# grub
https://hugh712.gitbooks.io/grub/content/configuration-files.html
https://wiki.ubuntu-tw.org/index.php?title=Grub2
</code></pre>]]></description></item><item><title>On-Premises K8s Installation</title><link>https://chienfuchen32.github.io/posts/on-prem-k8s-installation/</link><guid>https://chienfuchen32.github.io/posts/on-prem-k8s-installation/</guid><pubDate>Fri, 18 Sep 2020 10:00:04 +0800</pubDate><description><![CDATA[<p><img src="https://d33wubrfki0l68.cloudfront.net/d1411cded83856552f37911eb4522d9887ca4e83/b94b2/images/kubeadm/kubeadm-ha-topology-stacked-etcd.svg" alt="kubeadm-ha-topology"></p>
<h4 id="load-balancer--vip">Load balancer &amp; VIP</h4>
<p><a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-highly-available-haproxy-servers-with-keepalived-and-reserved-ips-on-ubuntu-14-04">HAProxy &amp; Keepalived</a></p>
<h4 id="init-ha-control-plane--worker-node">Init HA control plane &amp; worker node</h4>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>sudo kubeadm init --control-plane-endpoint <span style="color:#a31515">&#34;LOAD_BALANCER_DNS:LOAD_BALANCER_PORT&#34;</span> --upload-certs
</span></span><span style="display:flex;"><span>...
</span></span><span style="display:flex;"><span>...
</span></span><span style="display:flex;"><span>You can now join any number of control-plane node by running the following command on each as a root:
</span></span><span style="display:flex;"><span>    kubeadm join 192.168.0.200:6443 --token 9vr73a.a8uxyaju799qwdjv --discovery-token-ca-cert-hash sha256:7c2e69131a36ae2a042a339b33381c6d0d43887e2de83720eff5359e26aec866 --control-plane --certificate-key f8902e114ef118304e561c3ecd4d0b543adc226b7a07f675f56564185ffe0c07
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Please note that the certificate-key gives access to cluster sensitive data, keep it secret!
</span></span><span style="display:flex;"><span>As a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use kubeadm init phase upload-certs to reload certs afterward.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Then you can join any number of worker nodes by running the following on each as root:
</span></span><span style="display:flex;"><span>    kubeadm join 192.168.0.200:6443 --token 9vr73a.a8uxyaju799qwdjv --discovery-token-ca-cert-hash sha256:7c2e69131a36ae2a042a339b33381c6d0d43887e2de83720eff5359e26aec866
</span></span></code></pre></div><h4 id="networking-with-weave-net">Networking with Weave Net</h4>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ kubectl apply -f <span style="color:#a31515">&#34;https://cloud.weave.works/k8s/net?k8s-version=</span><span style="color:#00f">$(</span>kubectl version | base64 | tr -d <span style="color:#a31515">&#39;\n&#39;</span><span style="color:#00f">)</span><span style="color:#a31515">&#34;</span>
</span></span></code></pre></div><ul>
<li><a href="https://www.weave.works/docs/net/latest/overview/">https://www.weave.works/docs/net/latest/overview/</a></li>
<li><a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/high-availability/">https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/high-availability/</a></li>
</ul>
<h4 id="ingress-controller-with-nginx">Ingress controller with Nginx</h4>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.3.1/deploy/static/provider/cloud/deploy.yaml
</span></span></code></pre></div><ul>
<li><a href="https://kubernetes.github.io/ingress-nginx/">https://kubernetes.github.io/ingress-nginx/</a></li>
</ul>
<h4 id="storage">Storage</h4>
<ul>
<li>Ceph
<img src="https://rook.io/docs/rook/v1.10/Getting-Started/ceph-storage/kubernetes.png" alt="Rook Ceph"></li>
</ul>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ git clone --single-branch --branch v1.10.1 https://github.com/rook/rook.git
</span></span><span style="display:flex;"><span>$ cd rook/deploy/examples
</span></span><span style="display:flex;"><span>$ kubectl create -f crds.yaml -f common.yaml -f operator.yaml
</span></span><span style="display:flex;"><span>$ kubectl create -f cluster.yaml
</span></span></code></pre></div><ul>
<li><a href="https://rook.io/docs/rook/v1.10/Getting-Started/intro/">https://rook.io/docs/rook/v1.10/Getting-Started/intro/</a></li>
</ul>
<h4 id="monitoring">Monitoring</h4>
<ul>
<li>Prometheus, Grafana
<img src="https://prometheus.io/assets/architecture.png" alt="Prometheus"></li>
</ul>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
</span></span><span style="display:flex;"><span>$ helm repo update
</span></span><span style="display:flex;"><span>$ helm install -n [NAMESPACE] [RELEASE_NAME] prometheus-community/kube-prometheus-stack
</span></span></code></pre></div><ul>
<li><a href="https://prometheus.io">https://prometheus.io</a></li>
<li><a href="https://grafana.com/oss/grafana/">https://grafana.com/oss/grafana/</a></li>
</ul>
<h4 id="log">Log</h4>
<ul>
<li>Loki
<img src="https://grafana.com/static/img/logs/logs-loki-diagram.svg" alt="Loki"></li>
</ul>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ helm repo add grafana https://grafana.github.io/helm-charts
</span></span><span style="display:flex;"><span>$ helm repo update
</span></span><span style="display:flex;"><span>$ helm upgrade --install --namespace=[NAMESPACE] [RELEASE_NAME] grafana/loki-stack
</span></span></code></pre></div><ul>
<li><a href="https://grafana.com/oss/loki/">https://grafana.com/oss/loki/</a></li>
</ul>
]]></description></item></channel></rss>