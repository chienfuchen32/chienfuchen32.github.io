<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kubernetes · New Blog</title><link>https://chienfuchen32.github.io/tags/kubernetes/</link><description>Recent content in Kubernetes · New Blog</description><language>en-us</language><lastBuildDate>Fri, 15 Apr 2022 15:45:07 +0800</lastBuildDate><atom:link href="https://chienfuchen32.github.io/tags/kubernetes/index.xml" rel="self" type="application/rss+xml"/><item><title>Nginx Ingress Controller K8S Guide</title><link>https://chienfuchen32.github.io/posts/nginx-ingress-controller-k8s-guide/</link><guid>https://chienfuchen32.github.io/posts/nginx-ingress-controller-k8s-guide/</guid><pubDate>Fri, 15 Apr 2022 15:45:07 +0800</pubDate><description><![CDATA[<h2 id="nginx-介紹">Nginx 介紹</h2>
<p>Nginx是非同步框架的網頁伺服器，也可以用作反向代理、負載平衡器和HTTP快取。
<img src="https://miro.medium.com/max/1024/1*TrNJZqECEj0eVuJDeNKtNQ.png" alt="nginx"></p>
<ul>
<li>設置範例</li>
</ul>
<pre tabindex="0"><code class="language-conf" data-lang="conf">server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;

    listen 443 ssl default_server;
    ssl_certificate /tls/server.crt;
    ssl_certificate_key /tls/server.key;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        #root   /usr/share/nginx/html;
        #index  index.html index.htm;
		proxy_pass http://192.168.24.100:9090/;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection &#34;Upgrade&#34;;
		proxy_set_header Host $host;
		proxy_connect_timeout 60s;
		proxy_read_timeout 300s;
		proxy_send_timeout 300s;
    }


    location /socket.io {
        proxy_pass http://192.168.24.100:9091/;
        #Version 1.1 is recommended for use with keepalive connections
        proxy_http_version 1.1; #WebSocket
        proxy_set_header Upgrade $http_upgrade; #WebSocket
        proxy_set_header Connection $connection_upgrade; #WebSocket       
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Cookie $http_cookie;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

}
</code></pre><p>可以透過<code>nginx -s reload</code>讓nginx對新的配置生效</p>
<ul>
<li><a href="https://nginx.org/en/docs/beginners_guide.html">https://nginx.org/en/docs/beginners_guide.html</a></li>
<li><a href="https://nginx.org/en/docs/">https://nginx.org/en/docs/</a></li>
</ul>
<h2 id="k8s-service">K8S service</h2>
<p><img src="https://miro.medium.com/max/1094/1*YeBt0Z9BEA7T_tUO4iYQyQ.png" alt="service">
K8S 定義 Service 這個 resource object，在 pod 的前方提供了一個抽象層，讓外部的服務可以用
domain name 的方式存取 pod，而 domain name &lt;–&gt; Pod 這一段問題，就由 Service 來處理。 但利用
domain name 來存取終究還是需要一個 IP address，而每個 Service 都會自帶 VIP，讓 network traffic
有辦法正常送過來，並導到後方真正提供服務的 pod。</p>
<ul>
<li><a href="https://kubernetes.io/docs/concepts/services-networking/service/">https://kubernetes.io/docs/concepts/services-networking/service/</a></li>
<li><a href="https://godleon.github.io/blog/Kubernetes/k8s-Service-Overview/">https://godleon.github.io/blog/Kubernetes/k8s-Service-Overview/</a></li>
</ul>
<h2 id="k8s-ingress">K8S Ingress</h2>
<p><img src="https://miro.medium.com/max/1024/1*BYGsxY_GR-eZgNJfbbikzA.png" alt="ingress">
Ingress是從Kubernetes叢集外部訪問到群集內部服務的方法之一</p>
<ul>
<li><a href="https://kubernetes.io/docs/concepts/services-networking/ingress/">https://kubernetes.io/docs/concepts/services-networking/ingress/</a></li>
</ul>
<h2 id="nginx-ingress-controller">Nginx Ingress controller</h2>
<p>為了讓Ingress資源工作，叢集必須有一個正在運行的Ingress controller，其功能實作如:</p>
<ul>
<li>SSL/TLS offloading</li>
<li>反向代理，域名解析</li>
<li>四層和七層區別網路封包轉導</li>
</ul>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-txt" data-lang="txt"><span style="display:flex;"><span>Kubernetes                                                  Workstation
</span></span><span style="display:flex;"><span>+---------------------------------------------------+     +------------------+
</span></span><span style="display:flex;"><span>|                                                   |     |                  |
</span></span><span style="display:flex;"><span>|  +-----------+   apiserver        +------------+  |     |  +------------+  |
</span></span><span style="display:flex;"><span>|  |           |   proxy            |            |  |     |  |            |  |
</span></span><span style="display:flex;"><span>|  | apiserver |                    |  ingress   |  |     |  |  ingress   |  |
</span></span><span style="display:flex;"><span>|  |           |                    | controller |  |     |  | controller |  |
</span></span><span style="display:flex;"><span>|  |           |                    |            |  |     |  |            |  |
</span></span><span style="display:flex;"><span>|  |           |                    |            |  |     |  |            |  |
</span></span><span style="display:flex;"><span>|  |           |  service account/  |            |  |     |  |            |  |
</span></span><span style="display:flex;"><span>|  |           |  kubeconfig        |            |  |     |  |            |  |
</span></span><span style="display:flex;"><span>|  |           +&lt;-------------------+            |  |     |  |            |  |
</span></span><span style="display:flex;"><span>|  |           |                    |            |  |     |  |            |  |
</span></span><span style="display:flex;"><span>|  +------+----+      kubeconfig    +------+-----+  |     |  +------+-----+  |
</span></span><span style="display:flex;"><span>|         |&lt;--------------------------------------------------------|        |
</span></span><span style="display:flex;"><span>|                                                   |     |                  |
</span></span><span style="display:flex;"><span>+---------------------------------------------------+     +------------------+
</span></span></code></pre></div><ul>
<li><a href="https://kubernetes.io/docs/concepts/services-networking/ingress-controllers/">https://kubernetes.io/docs/concepts/services-networking/ingress-controllers/</a></li>
<li></li>
</ul>
<p><a href="https://www.f5points.com.tw/2021/10/27/ingress-controller-%E9%81%B8%E5%9E%8B%E6%8C%87%E5%8D%97%EF%BC%8C%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86%EF%BC%9A%E7%A2%BA%E5%AE%9A%E9%9C%80%E6%B1%82/#:~:text=Ingress%20Controller%20%E6%98%AF%E4%B8%80%E7%A8%AE%E5%B0%88%E7%94%A8,%E9%80%B2%E5%85%A5%20Kubernetes%20%E9%9B%86%E7%BE%A4%E7%9A%84%E6%B5%81%E9%87%8F">https://www.f5points.com.tw/2021/10/27/ingress-controller-%E9%81%B8%E5%9E%8B%E6%8C%87%E5%8D%97%EF%BC%8C%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86%EF%BC%9A%E7%A2%BA%E5%AE%9A%E9%9C%80%E6%B1%82/#:~:text=Ingress%20Controller%20%E6%98%AF%E4%B8%80%E7%A8%AE%E5%B0%88%E7%94%A8,%E9%80%B2%E5%85%A5%20Kubernetes%20%E9%9B%86%E7%BE%A4%E7%9A%84%E6%B5%81%E9%87%8F</a></p>
<ul>
<li><a href="https://kubernetes.github.io/ingress-nginx/how-it-works/">https://kubernetes.github.io/ingress-nginx/how-it-works/</a></li>
</ul>
<h2 id="常見使用情形範例與除錯方式">常見使用情形範例與除錯方式</h2>
<h3 id="dnsip避免影響正式環境">DNS,IP,避免影響正式環境</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-txt" data-lang="txt"><span style="display:flex;"><span># /etc/hosts
</span></span><span style="display:flex;"><span># 20220415 lab
</span></span><span style="display:flex;"><span>192.168.24.1 lab-20220415.foo.com
</span></span><span style="display:flex;"><span>192.168.24.1 lab-20220415.bar.foo.com
</span></span></code></pre></div><h3 id="backend-service-k8s-pod-or-external-service">Backend service (K8S pod or external service)</h3>
<ul>
<li>於pod/container中使用<code>curl</code> / <code>wget</code> 工具:</li>
</ul>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ curl localhost:5000/healthz
</span></span></code></pre></div><ul>
<li>透過本機連線來除錯 service port forward (cli or lens)</li>
</ul>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ kubectl port-forward -n 20220415-nginx-lab service/nginx-lab 25000/5000
</span></span></code></pre></div><ul>
<li><a href="https://kubernetes.io/docs/tasks/access-application-cluster/port-forward-access-application-cluster/">https://kubernetes.io/docs/tasks/access-application-cluster/port-forward-access-application-cluster/</a></li>
</ul>
<h3 id="rewrite">rewrite</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>echo <span style="color:#a31515">&#39;
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">apiVersion: networking.k8s.io/v1
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">kind: Ingress
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">metadata:
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">  annotations:
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">    nginx.ingress.kubernetes.io/rewrite-target: /$2
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">  name: rewrite
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">  namespace: default
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">spec:
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">  ingressClassName: nginx
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">  rules:
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">  - host: rewrite.bar.com
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">    http:
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">      paths:
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">      - path: /something(/|$)(.*)
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">        pathType: Prefix
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">        backend:
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">          service:
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">            name: http-svc
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">            port: 
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">              number: 80
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">&#39;</span> | kubectl create -f -
</span></span></code></pre></div><p>In this ingress definition, any characters captured by (.*) will be assigned to the
placeholder $2, which is then used as a parameter in the rewrite-target annotation.
For example, the ingress definition above will result in the following rewrites:</p>
<ol>
<li><code>rewrite.bar.com/something</code> rewrites to <code>rewrite.bar.com</code></li>
<li><code>rewrite.bar.com/something/</code> rewrites to <code>rewrite.bar.com/</code></li>
<li><code>rewrite.bar.com/something/new</code> rewrites to <code>rewrite.bar.com/new</code></li>
</ol>
<pre tabindex="0"><code>example

rewrite.bar.com/something/new    |------------|      IP:PORT/new          |-----------------|
--------------------------------&gt;|   Nginx    |--------------------------&gt;| backend service |
                                 |------------|                           |-----------------|
</code></pre><p><a href="https://kubernetes.github.io/ingress-nginx/examples/rewrite/">https://kubernetes.github.io/ingress-nginx/examples/rewrite/</a></p>
<h3 id="ssltls-offloading">SSL/TLS Offloading</h3>
<ul>
<li><a href="https://www.nginx.com/blog/nginx-ssl/">https://www.nginx.com/blog/nginx-ssl/</a></li>
</ul>
<h3 id="websocket">Websocket</h3>
<ul>
<li><a href="https://nginx.org/en/docs/http/websocket.html">https://nginx.org/en/docs/http/websocket.html</a></li>
<li></li>
</ul>
<p><a href="https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/#custom-timeouts">https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/#custom-timeouts</a></p>
<h3 id="tcpudp-service">TCP/UDP service</h3>
<ul>
<li><a href="https://nginx.org/en/docs/stream/stream_processing.html">https://nginx.org/en/docs/stream/stream_processing.html</a></li>
<li><a href="https://kubernetes.github.io/ingress-nginx/user-guide/exposing-tcp-udp-services/">https://kubernetes.github.io/ingress-nginx/user-guide/exposing-tcp-udp-services/</a></li>
</ul>
<h1 id="lab-and-demo">lab and demo</h1>
<ul>
<li><a href="https://github.com/chienfuchen32/k8s-nginx-ingress-hands-on-lab">https://github.com/chienfuchen32/k8s-nginx-ingress-hands-on-lab</a></li>
</ul>
<ol>
<li>develope app</li>
<li>deploy</li>
</ol>
<ul>
<li>examples
<a href="https://lab-20220415.foo.com/">https://lab-20220415.foo.com/</a>
<a href="https://lab-20220415.bar.foo.com">https://lab-20220415.bar.foo.com</a>
<a href="https://lab-20220415.foo.com/nginx-lab/">https://lab-20220415.foo.com/nginx-lab/</a>
<a href="https://lab-20220415.foo.com/nginx-lab-rewrite/">https://lab-20220415.foo.com/nginx-lab-rewrite/</a></li>
</ul>
<h1 id="特殊情境">特殊情境</h1>
<h2 id="若服務不在k8s中在同一個lan的vm可以從k8s叢集連線的到">若服務不在K8S中，在同一個LAN的VM，可以從K8S叢集連線的到</h2>
<ul>
<li>假設服務跑在http://192.168.24.101:5000</li>
</ul>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span>apiVersion: v1
</span></span><span style="display:flex;"><span>kind: Service
</span></span><span style="display:flex;"><span>metadata:
</span></span><span style="display:flex;"><span>  name: external-svc
</span></span><span style="display:flex;"><span>  namespace: app
</span></span><span style="display:flex;"><span>spec:
</span></span><span style="display:flex;"><span>  ports:
</span></span><span style="display:flex;"><span>    - protocol: TCP
</span></span><span style="display:flex;"><span>      port: 5000
</span></span><span style="display:flex;"><span>      targetPort: 5000
</span></span><span style="display:flex;"><span>  type: ClusterIP
</span></span><span style="display:flex;"><span>  sessionAffinity: None
</span></span><span style="display:flex;"><span>---
</span></span><span style="display:flex;"><span>apiVersion: v1
</span></span><span style="display:flex;"><span>kind: Endpoints
</span></span><span style="display:flex;"><span>metadata:
</span></span><span style="display:flex;"><span>  name: external-svc
</span></span><span style="display:flex;"><span>  namespace: app
</span></span><span style="display:flex;"><span>subsets:
</span></span><span style="display:flex;"><span>  - addresses:
</span></span><span style="display:flex;"><span>      - ip: 192.168.24.101
</span></span><span style="display:flex;"><span>    ports:
</span></span><span style="display:flex;"><span>      - port: 5000
</span></span><span style="display:flex;"><span>        protocol: TCP
</span></span><span style="display:flex;"><span>---
</span></span><span style="display:flex;"><span>apiVersion: extensions/v1beta1
</span></span><span style="display:flex;"><span>kind: Ingress
</span></span><span style="display:flex;"><span>metadata:
</span></span><span style="display:flex;"><span>  name: external-ingress
</span></span><span style="display:flex;"><span>  namespace: app
</span></span><span style="display:flex;"><span>  labels:
</span></span><span style="display:flex;"><span>    app: external-ingress
</span></span><span style="display:flex;"><span>  annotations:
</span></span><span style="display:flex;"><span>    kubernetes.io/ingress.class: nginx
</span></span><span style="display:flex;"><span>    nginx.ingress.kubernetes.io/rewrite-target: /$2
</span></span><span style="display:flex;"><span>    nginx.ingress.kubernetes.io/use-regex: <span style="color:#a31515">&#39;true&#39;</span>
</span></span><span style="display:flex;"><span>spec:
</span></span><span style="display:flex;"><span>  rules:
</span></span><span style="display:flex;"><span>    - host: mydomain.com
</span></span><span style="display:flex;"><span>      http:
</span></span><span style="display:flex;"><span>        paths:
</span></span><span style="display:flex;"><span>          - path: /path(/|$)(.*)
</span></span><span style="display:flex;"><span>            pathType: ImplementationSpecific
</span></span><span style="display:flex;"><span>            backend:
</span></span><span style="display:flex;"><span>              serviceName: external-svc
</span></span><span style="display:flex;"><span>              servicePort: 5000
</span></span></code></pre></div>]]></description></item><item><title>Kubernetes Guide for Developer</title><link>https://chienfuchen32.github.io/posts/k8s-guide-for-developer/</link><guid>https://chienfuchen32.github.io/posts/k8s-guide-for-developer/</guid><pubDate>Fri, 18 Mar 2022 14:32:45 +0800</pubDate><description><![CDATA[<h2 id="environment">Environment</h2>
<p>Before you try to use any client tool connect to Kubernetes, please check the endpoint field
&ldquo;server&rdquo; of &ldquo;cluster&rdquo; credential config file.</p>
<p>Please make sure you&rsquo;re able connect with the kube-apiserver.</p>
<p>For instance, example below shown here is &ldquo;k8s-cluster&rdquo;</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span>apiVersion: v1
</span></span><span style="display:flex;"><span>kind: Config
</span></span><span style="display:flex;"><span>clusters:
</span></span><span style="display:flex;"><span>  - name: team-a-admin@kubernetes
</span></span><span style="display:flex;"><span>    cluster:
</span></span><span style="display:flex;"><span>      server: <span style="color:#a31515">&#39;https://k8s-cluster:8443&#39;</span>
</span></span><span style="display:flex;"><span>      certificate-authority-data: &gt;-<span style="color:#a31515">
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">        xxxxx</span>        
</span></span><span style="display:flex;"><span>users:
</span></span><span style="display:flex;"><span>  - name: team-a-admin
</span></span><span style="display:flex;"><span>    user:
</span></span><span style="display:flex;"><span>      token: &gt;-<span style="color:#a31515">
</span></span></span><span style="display:flex;"><span><span style="color:#a31515">        xxxxx</span>        
</span></span><span style="display:flex;"><span>contexts:
</span></span><span style="display:flex;"><span>  - name: team-a-admin@kubernetes
</span></span><span style="display:flex;"><span>    context:
</span></span><span style="display:flex;"><span>      user: team-a-admin
</span></span><span style="display:flex;"><span>      cluster: team-a-admin@kubernetes
</span></span><span style="display:flex;"><span>      namespace: team-a
</span></span><span style="display:flex;"><span>current-context: team-a-admin@kubernetes
</span></span></code></pre></div><p>This example is based on self-host Kubernetes v1.18 environment, you machine might not be able to recognize the
target,</p>
<p>it lack of DNS and k8s apiserver certificate support currently.</p>
<p>If you have trouble with this kind of problem, please add a record in my <b>hosts</b> file,
that makes my machine&rsquo;s dns resolvable.</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-txt" data-lang="txt"><span style="display:flex;"><span># File path
</span></span><span style="display:flex;"><span># Windows: `C:\Windows\System32\drivers\etc\hosts`
</span></span><span style="display:flex;"><span># Linux: `/etc/hosts`
</span></span><span style="display:flex;"><span>192.168.24.1 k8s-cluster`
</span></span></code></pre></div><h4 id="k8s-client">K8S client</h4>
<ul>
<li><a href="https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/">https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/</a></li>
<li><a href="https://k8slens.dev/">https://k8slens.dev/</a></li>
<li><a href="https://k9scli.io">https://k9scli.io</a></li>
<li><a href="https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/">https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/</a></li>
</ul>
<h2 id="docker-registry">Docker Registry</h2>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ docker login my-registry.com
</span></span><span style="display:flex;"><span>Username: 
</span></span><span style="display:flex;"><span>Password:
</span></span><span style="display:flex;"><span>$ docker push my-registry.com/my-app:0.0.1
</span></span></code></pre></div><h2 id="deployment-example-in-our-environment">Deployment example in our environment</h2>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span>apiVersion: apps/v1
</span></span><span style="display:flex;"><span>kind: Deployment
</span></span><span style="display:flex;"><span>metadata:
</span></span><span style="display:flex;"><span>  name: my-app
</span></span><span style="display:flex;"><span>  namespace: team-a
</span></span><span style="display:flex;"><span>spec:
</span></span><span style="display:flex;"><span>  selector:
</span></span><span style="display:flex;"><span>    matchLabels:
</span></span><span style="display:flex;"><span>      app: my-app
</span></span><span style="display:flex;"><span>  replicas: 1 <span style="color:#008000"># tells deployment to run 2 pods matching the template</span>
</span></span><span style="display:flex;"><span>  template:
</span></span><span style="display:flex;"><span>    metadata:
</span></span><span style="display:flex;"><span>      labels:
</span></span><span style="display:flex;"><span>        app: my-app
</span></span><span style="display:flex;"><span>    spec:
</span></span><span style="display:flex;"><span>      containers:
</span></span><span style="display:flex;"><span>      - name: my-app
</span></span><span style="display:flex;"><span>        image: my-registry/my-app:0.0.1
</span></span><span style="display:flex;"><span>        ports:
</span></span><span style="display:flex;"><span>        - containerPort: 80
</span></span><span style="display:flex;"><span>      nodeSelector:
</span></span><span style="display:flex;"><span>        node-role.kubernetes.io/worker: <span style="color:#a31515">&#39;true&#39;</span> <span style="color:#008000"># We have many VMs in the Kubernetes cluster. </span>
</span></span><span style="display:flex;"><span>We prefer all the pod running on certain VM, please add description below in my deployment. 
</span></span><span style="display:flex;"><span>That will make pods running on our pre labeled K8S worker node.
</span></span><span style="display:flex;"><span>      imagePullSecrets:
</span></span><span style="display:flex;"><span>        - name: my-registry-auth
</span></span></code></pre></div><ul>
<li><a href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/">https://kubernetes.io/docs/concepts/workloads/controllers/deployment/</a></li>
</ul>
<h2 id="service-ingress">Service, Ingress</h2>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span>apiVersion: v1
</span></span><span style="display:flex;"><span>kind: Service
</span></span><span style="display:flex;"><span>metadata:
</span></span><span style="display:flex;"><span>  name: my-app-svc
</span></span><span style="display:flex;"><span>  namespace: team-a
</span></span><span style="display:flex;"><span>spec:
</span></span><span style="display:flex;"><span>  ports:
</span></span><span style="display:flex;"><span>    - name: http
</span></span><span style="display:flex;"><span>      protocol: TCP
</span></span><span style="display:flex;"><span>      port: 80
</span></span><span style="display:flex;"><span>      targetPort: 80
</span></span><span style="display:flex;"><span>  selector:
</span></span><span style="display:flex;"><span>    app: my-app
</span></span><span style="display:flex;"><span>  type: ClusterIP
</span></span><span style="display:flex;"><span>---
</span></span><span style="display:flex;"><span>apiVersion: extensions/v1beta1
</span></span><span style="display:flex;"><span>kind: Ingress
</span></span><span style="display:flex;"><span>metadata:
</span></span><span style="display:flex;"><span>  name: my-app-ingress
</span></span><span style="display:flex;"><span>  namespace: team-a
</span></span><span style="display:flex;"><span>  labels:
</span></span><span style="display:flex;"><span>    app: my-app
</span></span><span style="display:flex;"><span>    kubernetes.io/ingress.class: nginx
</span></span><span style="display:flex;"><span>    nginx.ingress.kubernetes.io/use-regex: <span style="color:#a31515">&#39;true&#39;</span>
</span></span><span style="display:flex;"><span>spec:
</span></span><span style="display:flex;"><span>  rules:
</span></span><span style="display:flex;"><span>    - host: my-app.deltaww.com
</span></span><span style="display:flex;"><span>      http:
</span></span><span style="display:flex;"><span>        paths:
</span></span><span style="display:flex;"><span>          - path: /prefix(/|$)(.*)
</span></span><span style="display:flex;"><span>            backend:
</span></span><span style="display:flex;"><span>              serviceName: my-app-svc
</span></span><span style="display:flex;"><span>              servicePort: 80
</span></span><span style="display:flex;"><span>---
</span></span><span style="display:flex;"><span>apiVersion: extensions/v1beta1
</span></span><span style="display:flex;"><span>kind: Ingress
</span></span><span style="display:flex;"><span>metadata:
</span></span><span style="display:flex;"><span>  name: my-domain-ingress
</span></span><span style="display:flex;"><span>  namespace: team-a
</span></span><span style="display:flex;"><span>  labels:
</span></span><span style="display:flex;"><span>    app: my-domain
</span></span><span style="display:flex;"><span>    kubernetes.io/ingress.class: nginx
</span></span><span style="display:flex;"><span>    nginx.ingress.kubernetes.io/use-regex: <span style="color:#a31515">&#39;true&#39;</span>
</span></span><span style="display:flex;"><span>spec:
</span></span><span style="display:flex;"><span>  tls:
</span></span><span style="display:flex;"><span>    - hosts:
</span></span><span style="display:flex;"><span>        - my-domain.com
</span></span><span style="display:flex;"><span>      secretName: my-tls <span style="color:#008000"># please make sure there&#39;s an existed K8S secret in </span>
</span></span><span style="display:flex;"><span>the same namespace
</span></span><span style="display:flex;"><span>  rules:
</span></span><span style="display:flex;"><span>    - host: my-domain.com
</span></span><span style="display:flex;"><span>      http:
</span></span><span style="display:flex;"><span>        paths:
</span></span><span style="display:flex;"><span>          - path: /prefix(/|$)(.*)
</span></span><span style="display:flex;"><span>            backend:
</span></span><span style="display:flex;"><span>              serviceName: my-app-svc
</span></span><span style="display:flex;"><span>              servicePort: 80
</span></span></code></pre></div><ul>
<li><a href="https://kubernetes.io/docs/concepts/services-networking/service/">https://kubernetes.io/docs/concepts/services-networking/service/</a></li>
<li><a href="https://kubernetes.io/docs/concepts/services-networking/ingress/">https://kubernetes.io/docs/concepts/services-networking/ingress/</a></li>
</ul>
<h2 id="pvc">PVC</h2>
<p>Here&rsquo;s a PVC resource example.</p>
<p>The storageClassName describe below, rook-ceph is installed in our self-host environment. If you application is running on other Kubernetes cluster, please contact administrator.</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span>apiVersion: v1
</span></span><span style="display:flex;"><span>kind: PersistentVolumeClaim
</span></span><span style="display:flex;"><span>metadata:
</span></span><span style="display:flex;"><span>  name: my-app-logs-pvc
</span></span><span style="display:flex;"><span>  namespace: team-a
</span></span><span style="display:flex;"><span>  labels:
</span></span><span style="display:flex;"><span>    app: my-app-logs-pvc
</span></span><span style="display:flex;"><span>spec:
</span></span><span style="display:flex;"><span>  accessModes:
</span></span><span style="display:flex;"><span>    - ReadWriteOnce
</span></span><span style="display:flex;"><span>  resources:
</span></span><span style="display:flex;"><span>    requests:
</span></span><span style="display:flex;"><span>      storage: 10Gi
</span></span><span style="display:flex;"><span>  storageClassName: rook-ceph-block
</span></span><span style="display:flex;"><span>  volumeMode: Filesystem
</span></span></code></pre></div><p>Here&rsquo;s an example for logging file path mounting PVC</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span>apiVersion: v1
</span></span><span style="display:flex;"><span>kind: Pod
</span></span><span style="display:flex;"><span>metadata:
</span></span><span style="display:flex;"><span>  name: my-app2
</span></span><span style="display:flex;"><span>  namespace: team-a
</span></span><span style="display:flex;"><span>spec:
</span></span><span style="display:flex;"><span>  volumes:
</span></span><span style="display:flex;"><span>    - name: my-app-logs-storage
</span></span><span style="display:flex;"><span>      persistentVolumeClaim:
</span></span><span style="display:flex;"><span>        claimName: my-app-logs-pvc
</span></span><span style="display:flex;"><span>  containers:
</span></span><span style="display:flex;"><span>    - name: my-app2
</span></span><span style="display:flex;"><span>      image: my-registry.com/my-app:0.0.1
</span></span><span style="display:flex;"><span>      volumeMounts:
</span></span><span style="display:flex;"><span>        - mountPath: <span style="color:#a31515">&#34;/app/logs&#34;</span>
</span></span><span style="display:flex;"><span>          name: my-app-logs-storage
</span></span><span style="display:flex;"><span>  nodeSelector:
</span></span><span style="display:flex;"><span>    node-role.kubernetes.io/worker: <span style="color:#a31515">&#39;true&#39;</span> <span style="color:#008000"># We have many VMs in the Kubernetes cluster. We </span>
</span></span><span style="display:flex;"><span>prefer all the pod running on certain VM, please add description below in my deployment. 
</span></span><span style="display:flex;"><span>That will make pods running on our pre labeled K8S worker node.
</span></span><span style="display:flex;"><span>  imagePullSecrets:
</span></span><span style="display:flex;"><span>    - name: my-registry-auth
</span></span></code></pre></div><ul>
<li><a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-persistent-volume-storage/">https://kubernetes.io/docs/tasks/configure-pod-container/configure-persistent-volume-storage/</a></li>
</ul>
]]></description></item><item><title>On-Premises K8s Installation</title><link>https://chienfuchen32.github.io/posts/on-prem-k8s-installation/</link><guid>https://chienfuchen32.github.io/posts/on-prem-k8s-installation/</guid><pubDate>Fri, 18 Sep 2020 10:00:04 +0800</pubDate><description><![CDATA[<p><img src="https://d33wubrfki0l68.cloudfront.net/d1411cded83856552f37911eb4522d9887ca4e83/b94b2/images/kubeadm/kubeadm-ha-topology-stacked-etcd.svg" alt="kubeadm-ha-topology"></p>
<h4 id="load-balancer--vip">Load balancer &amp; VIP</h4>
<p><a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-highly-available-haproxy-servers-with-keepalived-and-reserved-ips-on-ubuntu-14-04">HAProxy &amp; Keepalived</a></p>
<h4 id="init-ha-control-plane--worker-node">Init HA control plane &amp; worker node</h4>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>sudo kubeadm init --control-plane-endpoint <span style="color:#a31515">&#34;LOAD_BALANCER_DNS:LOAD_BALANCER_PORT&#34;</span> --upload-certs
</span></span><span style="display:flex;"><span>...
</span></span><span style="display:flex;"><span>...
</span></span><span style="display:flex;"><span>You can now join any number of control-plane node by running the following command on each as a root:
</span></span><span style="display:flex;"><span>    kubeadm join 192.168.0.200:6443 --token 9vr73a.a8uxyaju799qwdjv --discovery-token-ca-cert-hash sha256:7c2e69131a36ae2a042a339b33381c6d0d43887e2de83720eff5359e26aec866 --control-plane --certificate-key f8902e114ef118304e561c3ecd4d0b543adc226b7a07f675f56564185ffe0c07
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Please note that the certificate-key gives access to cluster sensitive data, keep it secret!
</span></span><span style="display:flex;"><span>As a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use kubeadm init phase upload-certs to reload certs afterward.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Then you can join any number of worker nodes by running the following on each as root:
</span></span><span style="display:flex;"><span>    kubeadm join 192.168.0.200:6443 --token 9vr73a.a8uxyaju799qwdjv --discovery-token-ca-cert-hash sha256:7c2e69131a36ae2a042a339b33381c6d0d43887e2de83720eff5359e26aec866
</span></span></code></pre></div><h4 id="networking-with-weave-net">Networking with Weave Net</h4>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ kubectl apply -f <span style="color:#a31515">&#34;https://cloud.weave.works/k8s/net?k8s-version=</span><span style="color:#00f">$(</span>kubectl version | base64 | tr -d <span style="color:#a31515">&#39;\n&#39;</span><span style="color:#00f">)</span><span style="color:#a31515">&#34;</span>
</span></span></code></pre></div><ul>
<li><a href="https://www.weave.works/docs/net/latest/overview/">https://www.weave.works/docs/net/latest/overview/</a></li>
<li><a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/high-availability/">https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/high-availability/</a></li>
</ul>
<h4 id="ingress-controller-with-nginx">Ingress controller with Nginx</h4>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.3.1/deploy/static/provider/cloud/deploy.yaml
</span></span></code></pre></div><ul>
<li><a href="https://kubernetes.github.io/ingress-nginx/">https://kubernetes.github.io/ingress-nginx/</a></li>
</ul>
<h4 id="storage">Storage</h4>
<ul>
<li>Ceph
<img src="https://rook.io/docs/rook/v1.10/Getting-Started/ceph-storage/kubernetes.png" alt="Rook Ceph"></li>
</ul>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ git clone --single-branch --branch v1.10.1 https://github.com/rook/rook.git
</span></span><span style="display:flex;"><span>$ cd rook/deploy/examples
</span></span><span style="display:flex;"><span>$ kubectl create -f crds.yaml -f common.yaml -f operator.yaml
</span></span><span style="display:flex;"><span>$ kubectl create -f cluster.yaml
</span></span></code></pre></div><ul>
<li><a href="https://rook.io/docs/rook/v1.10/Getting-Started/intro/">https://rook.io/docs/rook/v1.10/Getting-Started/intro/</a></li>
</ul>
<h4 id="monitoring">Monitoring</h4>
<ul>
<li>Prometheus, Grafana
<img src="https://prometheus.io/assets/architecture.png" alt="Prometheus"></li>
</ul>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
</span></span><span style="display:flex;"><span>$ helm repo update
</span></span><span style="display:flex;"><span>$ helm install -n [NAMESPACE] [RELEASE_NAME] prometheus-community/kube-prometheus-stack
</span></span></code></pre></div><ul>
<li><a href="https://prometheus.io">https://prometheus.io</a></li>
<li><a href="https://grafana.com/oss/grafana/">https://grafana.com/oss/grafana/</a></li>
</ul>
<h4 id="log">Log</h4>
<ul>
<li>Loki
<img src="https://grafana.com/static/img/logs/logs-loki-diagram.svg" alt="Loki"></li>
</ul>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ helm repo add grafana https://grafana.github.io/helm-charts
</span></span><span style="display:flex;"><span>$ helm repo update
</span></span><span style="display:flex;"><span>$ helm upgrade --install --namespace=[NAMESPACE] [RELEASE_NAME] grafana/loki-stack
</span></span></code></pre></div><ul>
<li><a href="https://grafana.com/oss/loki/">https://grafana.com/oss/loki/</a></li>
</ul>
]]></description></item></channel></rss>